/**
 * OpenAPI ColorBox
 * This is a REST API for the AJA ColorBox product.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@aja.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 5.4.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 * Copyright (C) 2020-2022 AJA Video Systems, Inc.  All rights reserved.
 */

/*
 * Frame.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_Frame_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_Frame_H_


#include "ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  Frame
    : public ModelBase
{
public:
    Frame();
    virtual ~Frame();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;
    bool applyMinMaxConstraints() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// Frame members

    /// <summary>
    /// Image data
    /// </summary>
    utility::string_t getImage() const;
    bool imageIsSet() const;
    void unsetImage();

    void setImage(const utility::string_t& value);


    /// <summary>
    /// 
    /// </summary>
    utility::string_t getAncData() const;
    bool ancDataIsSet() const;
    void unsetAncData();

    void setAncData(const utility::string_t& value);


    /// <summary>
    /// 
    /// </summary>
    utility::string_t getUserData1() const;
    bool userData1IsSet() const;
    void unsetUserData1();

    void setUserData1(const utility::string_t& value);


    /// <summary>
    /// 
    /// </summary>
    utility::string_t getUserData2() const;
    bool userData2IsSet() const;
    void unsetUserData2();

    void setUserData2(const utility::string_t& value);



protected:
    utility::string_t m_Image;
    bool m_ImageIsSet;
    utility::string_t m_AncData;
    bool m_AncDataIsSet;
    utility::string_t m_UserData1;
    bool m_UserData1IsSet;
    utility::string_t m_UserData2;
    bool m_UserData2IsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_Frame_H_ */
