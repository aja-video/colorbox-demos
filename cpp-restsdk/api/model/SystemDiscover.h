/**
 * OpenAPI ColorBox
 * This is a REST API for the AJA ColorBox product.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@aja.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 5.4.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 * Copyright (C) 2020-2022 AJA Video Systems, Inc.  All rights reserved.
 */

/*
 * SystemDiscover.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_SystemDiscover_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_SystemDiscover_H_


#include "ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  SystemDiscover
    : public ModelBase
{
public:
    SystemDiscover();
    virtual ~SystemDiscover();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;
    bool applyMinMaxConstraints() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// SystemDiscover members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getServiceDescription() const;
    bool serviceDescriptionIsSet() const;
    void unsetServiceDescription();

    void setServiceDescription(const utility::string_t& value);


    /// <summary>
    /// 
    /// </summary>
    utility::string_t getServiceType() const;
    bool serviceTypeIsSet() const;
    void unsetServiceType();

    void setServiceType(const utility::string_t& value);


    /// <summary>
    /// 
    /// </summary>
    utility::string_t getServiceDomain() const;
    bool serviceDomainIsSet() const;
    void unsetServiceDomain();

    void setServiceDomain(const utility::string_t& value);


    /// <summary>
    /// 
    /// </summary>
    utility::string_t getHostName() const;
    bool hostNameIsSet() const;
    void unsetHostName();

    void setHostName(const utility::string_t& value);


    /// <summary>
    /// 
    /// </summary>
    utility::string_t getIpAddress() const;
    bool ipAddressIsSet() const;
    void unsetIpAddress();

    void setIpAddress(const utility::string_t& value);


    /// <summary>
    /// 
    /// </summary>
    double getPort() const;
    bool portIsSet() const;
    void unsetPort();

    void setPort(double value);


    /// <summary>
    /// 
    /// </summary>
    utility::string_t getDeviceName() const;
    bool deviceNameIsSet() const;
    void unsetDeviceName();

    void setDeviceName(const utility::string_t& value);


    /// <summary>
    /// 
    /// </summary>
    utility::string_t getDescription() const;
    bool descriptionIsSet() const;
    void unsetDescription();

    void setDescription(const utility::string_t& value);


    /// <summary>
    /// 
    /// </summary>
    utility::string_t getBoardType() const;
    bool boardTypeIsSet() const;
    void unsetBoardType();

    void setBoardType(const utility::string_t& value);


    /// <summary>
    /// 
    /// </summary>
    utility::string_t getBoardNumber() const;
    bool boardNumberIsSet() const;
    void unsetBoardNumber();

    void setBoardNumber(const utility::string_t& value);


    /// <summary>
    /// 
    /// </summary>
    utility::string_t getBoardID() const;
    bool boardIDIsSet() const;
    void unsetBoardID();

    void setBoardID(const utility::string_t& value);



protected:
    utility::string_t m_ServiceDescription;
    bool m_ServiceDescriptionIsSet;
    utility::string_t m_ServiceType;
    bool m_ServiceTypeIsSet;
    utility::string_t m_ServiceDomain;
    bool m_ServiceDomainIsSet;
    utility::string_t m_HostName;
    bool m_HostNameIsSet;
    utility::string_t m_IpAddress;
    bool m_IpAddressIsSet;
    double m_Port;
    bool m_PortIsSet;
    utility::string_t m_DeviceName;
    bool m_DeviceNameIsSet;
    utility::string_t m_Description;
    bool m_DescriptionIsSet;
    utility::string_t m_BoardType;
    bool m_BoardTypeIsSet;
    utility::string_t m_BoardNumber;
    bool m_BoardNumberIsSet;
    utility::string_t m_BoardID;
    bool m_BoardIDIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_SystemDiscover_H_ */
