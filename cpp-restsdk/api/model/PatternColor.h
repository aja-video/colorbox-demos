/**
 * OpenAPI ColorBox
 * This is a REST API for the AJA ColorBox product.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@aja.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 5.4.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 * Copyright (C) 2020-2022 AJA Video Systems Inc.  All rights reserved.
 */

/*
 * PatternColor.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_PatternColor_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_PatternColor_H_


#include "ModelBase.h"


namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  PatternColor
    : public ModelBase
{
public:
    PatternColor();
    virtual ~PatternColor();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;
    bool applyMinMaxConstraints() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// PatternColor members

    /// <summary>
    /// The color depth in bits, valid values are: 8, 10, 12 &amp; 16
    /// </summary>
    int32_t getDepth() const;
    bool depthIsSet() const;
    void unsetDepth();

    void setDepth(int32_t value);

    int32_t depthMin() const;
    int32_t depthMax() const;

    /// <summary>
    /// The blue component of the color, max value depends on bit depth
    /// </summary>
    int32_t getBlue() const;
    bool blueIsSet() const;
    void unsetBlue();

    void setBlue(int32_t value);

    int32_t blueMin() const;
    int32_t blueMax() const;

    /// <summary>
    /// The green component of the color, max value depends on bit depth
    /// </summary>
    int32_t getGreen() const;
    bool greenIsSet() const;
    void unsetGreen();

    void setGreen(int32_t value);

    int32_t greenMin() const;
    int32_t greenMax() const;

    /// <summary>
    /// The red component of the color, max value depends on bit depth
    /// </summary>
    int32_t getRed() const;
    bool redIsSet() const;
    void unsetRed();

    void setRed(int32_t value);

    int32_t redMin() const;
    int32_t redMax() const;


protected:
    int32_t m_Depth;
    bool m_DepthIsSet;
    int32_t m_Blue;
    bool m_BlueIsSet;
    int32_t m_Green;
    bool m_GreenIsSet;
    int32_t m_Red;
    bool m_RedIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_PatternColor_H_ */
