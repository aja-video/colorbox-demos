/**
 * OpenAPI ColorBox
 * This is a REST API for the AJA ColorBox product.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@aja.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 *       Do not edit the class manually.
 *
 * Copyright (C) 2020-2022 AJA Video Systems, Inc.  All rights reserved.
 */

/*
 * OAIWiFiDeviceConfig.h
 *
 * 
 */

#ifndef OAIWiFiDeviceConfig_H
#define OAIWiFiDeviceConfig_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIWiFiDeviceConfig : public OAIObject {
public:
    OAIWiFiDeviceConfig();
    OAIWiFiDeviceConfig(QString json);
    ~OAIWiFiDeviceConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getWifiControl() const;
    void setWifiControl(const QString &wifi_control);
    bool is_wifi_control_Set() const;
    bool is_wifi_control_Valid() const;

    QString getWifiNetwork() const;
    void setWifiNetwork(const QString &wifi_network);
    bool is_wifi_network_Set() const;
    bool is_wifi_network_Valid() const;

    QString getWifiPassword() const;
    void setWifiPassword(const QString &wifi_password);
    bool is_wifi_password_Set() const;
    bool is_wifi_password_Valid() const;

    QString getWifiSecurity() const;
    void setWifiSecurity(const QString &wifi_security);
    bool is_wifi_security_Set() const;
    bool is_wifi_security_Valid() const;

    QString getWifiIpConfig() const;
    void setWifiIpConfig(const QString &wifi_ip_config);
    bool is_wifi_ip_config_Set() const;
    bool is_wifi_ip_config_Valid() const;

    QString getAddress() const;
    void setAddress(const QString &address);
    bool is_address_Set() const;
    bool is_address_Valid() const;

    QString getSubnet() const;
    void setSubnet(const QString &subnet);
    bool is_subnet_Set() const;
    bool is_subnet_Valid() const;

    QString getGateway() const;
    void setGateway(const QString &gateway);
    bool is_gateway_Set() const;
    bool is_gateway_Valid() const;

    qint32 getWifiIpChangeCommit() const;
    void setWifiIpChangeCommit(const qint32 &wifi_ip_change_commit);
    bool is_wifi_ip_change_commit_Set() const;
    bool is_wifi_ip_change_commit_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

    bool applyMinMaxConstraints();
private:
    void initializeModel();

    QString m_wifi_control;
    bool m_wifi_control_isSet;
    bool m_wifi_control_isValid;

    QString m_wifi_network;
    bool m_wifi_network_isSet;
    bool m_wifi_network_isValid;

    QString m_wifi_password;
    bool m_wifi_password_isSet;
    bool m_wifi_password_isValid;

    QString m_wifi_security;
    bool m_wifi_security_isSet;
    bool m_wifi_security_isValid;

    QString m_wifi_ip_config;
    bool m_wifi_ip_config_isSet;
    bool m_wifi_ip_config_isValid;

    QString m_address;
    bool m_address_isSet;
    bool m_address_isValid;

    QString m_subnet;
    bool m_subnet_isSet;
    bool m_subnet_isValid;

    QString m_gateway;
    bool m_gateway_isSet;
    bool m_gateway_isValid;

    qint32 m_wifi_ip_change_commit;
    bool m_wifi_ip_change_commit_isSet;
    bool m_wifi_ip_change_commit_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWiFiDeviceConfig)

#endif // OAIWiFiDeviceConfig_H
