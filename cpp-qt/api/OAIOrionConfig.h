/**
 * OpenAPI ColorBox
 * This is a REST API for the AJA ColorBox product.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@aja.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 *       Do not edit the class manually.
 *
 * Copyright (C) 2020-2022 AJA Video Systems, Inc.  All rights reserved.
 */

/*
 * OAIOrionConfig.h
 *
 * 
 */

#ifndef OAIOrionConfig_H
#define OAIOrionConfig_H

#include <QJsonObject>

#include "OAIOrionClamping.h"
#include "OAIOrionConversion.h"
#include "OAIOrionImplementation.h"
#include "OAIOrionMethod.h"
#include "OAIOrionMode.h"
#include "OAIOrionSdrEotf.h"
#include "OAIOrionSourceRange.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIOrionConfig : public OAIObject {
public:
    OAIOrionConfig();
    OAIOrionConfig(QString json);
    ~OAIOrionConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isEnabled() const;
    void setEnabled(const bool &enabled);
    bool is_enabled_Set() const;
    bool is_enabled_Valid() const;

    OAIOrionConversion getConversion() const;
    void setConversion(const OAIOrionConversion &conversion);
    bool is_conversion_Set() const;
    bool is_conversion_Valid() const;

    OAIOrionMode getMode() const;
    void setMode(const OAIOrionMode &mode);
    bool is_mode_Set() const;
    bool is_mode_Valid() const;

    OAIOrionMethod getMethod() const;
    void setMethod(const OAIOrionMethod &method);
    bool is_method_Set() const;
    bool is_method_Valid() const;

    OAIOrionSourceRange getSourceRange() const;
    void setSourceRange(const OAIOrionSourceRange &source_range);
    bool is_source_range_Set() const;
    bool is_source_range_Valid() const;

    double getHdrRef() const;
    void setHdrRef(const double &hdr_ref);
    bool is_hdr_ref_Set() const;
    bool is_hdr_ref_Valid() const;
    double hdrRefMin() const;
    double hdrRefMax() const;

    double getSdrRef() const;
    void setSdrRef(const double &sdr_ref);
    bool is_sdr_ref_Set() const;
    bool is_sdr_ref_Valid() const;
    double sdrRefMin() const;
    double sdrRefMax() const;

    qint32 getHdrPeak() const;
    void setHdrPeak(const qint32 &hdr_peak);
    bool is_hdr_peak_Set() const;
    bool is_hdr_peak_Valid() const;
    qint32 hdrPeakMin() const;
    qint32 hdrPeakMax() const;

    OAIOrionSdrEotf getSdrEotf() const;
    void setSdrEotf(const OAIOrionSdrEotf &sdr_eotf);
    bool is_sdr_eotf_Set() const;
    bool is_sdr_eotf_Valid() const;

    double getPreKnee() const;
    void setPreKnee(const double &pre_knee);
    bool is_pre_knee_Set() const;
    bool is_pre_knee_Valid() const;
    double preKneeMin() const;
    double preKneeMax() const;

    double getPreAmount() const;
    void setPreAmount(const double &pre_amount);
    bool is_pre_amount_Set() const;
    bool is_pre_amount_Valid() const;
    double preAmountMin() const;
    double preAmountMax() const;

    double getPostKnee() const;
    void setPostKnee(const double &post_knee);
    bool is_post_knee_Set() const;
    bool is_post_knee_Valid() const;
    double postKneeMin() const;
    double postKneeMax() const;

    double getPostAmount() const;
    void setPostAmount(const double &post_amount);
    bool is_post_amount_Set() const;
    bool is_post_amount_Valid() const;
    double postAmountMin() const;
    double postAmountMax() const;

    OAIOrionClamping getClamping() const;
    void setClamping(const OAIOrionClamping &clamping);
    bool is_clamping_Set() const;
    bool is_clamping_Valid() const;

    OAIOrionImplementation getImplementation() const;
    void setImplementation(const OAIOrionImplementation &implementation);
    bool is_implementation_Set() const;
    bool is_implementation_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

    bool applyMinMaxConstraints();
private:
    void initializeModel();

    bool m_enabled;
    bool m_enabled_isSet;
    bool m_enabled_isValid;

    OAIOrionConversion m_conversion;
    bool m_conversion_isSet;
    bool m_conversion_isValid;

    OAIOrionMode m_mode;
    bool m_mode_isSet;
    bool m_mode_isValid;

    OAIOrionMethod m_method;
    bool m_method_isSet;
    bool m_method_isValid;

    OAIOrionSourceRange m_source_range;
    bool m_source_range_isSet;
    bool m_source_range_isValid;

    double m_hdr_ref;
    bool m_hdr_ref_isSet;
    bool m_hdr_ref_isValid;

    double m_sdr_ref;
    bool m_sdr_ref_isSet;
    bool m_sdr_ref_isValid;

    qint32 m_hdr_peak;
    bool m_hdr_peak_isSet;
    bool m_hdr_peak_isValid;

    OAIOrionSdrEotf m_sdr_eotf;
    bool m_sdr_eotf_isSet;
    bool m_sdr_eotf_isValid;

    double m_pre_knee;
    bool m_pre_knee_isSet;
    bool m_pre_knee_isValid;

    double m_pre_amount;
    bool m_pre_amount_isSet;
    bool m_pre_amount_isValid;

    double m_post_knee;
    bool m_post_knee_isSet;
    bool m_post_knee_isValid;

    double m_post_amount;
    bool m_post_amount_isSet;
    bool m_post_amount_isValid;

    OAIOrionClamping m_clamping;
    bool m_clamping_isSet;
    bool m_clamping_isValid;

    OAIOrionImplementation m_implementation;
    bool m_implementation_isSet;
    bool m_implementation_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOrionConfig)

#endif // OAIOrionConfig_H
