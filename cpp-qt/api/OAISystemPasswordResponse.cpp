/**
 * OpenAPI ColorBox
 * This is a REST API for the AJA ColorBox product.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@aja.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 *       Do not edit the class manually.
 *
 * Copyright (C) 2020-2022 AJA Video Systems Inc.  All rights reserved.
 */

#include "OAISystemPasswordResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISystemPasswordResponse::OAISystemPasswordResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISystemPasswordResponse::OAISystemPasswordResponse() {
    this->initializeModel();
}

OAISystemPasswordResponse::~OAISystemPasswordResponse() {}

void OAISystemPasswordResponse::initializeModel() {

    m_successful_isSet = false;
    m_successful_isValid = false;

    m_message_isSet = false;
    m_message_isValid = false;
}

void OAISystemPasswordResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISystemPasswordResponse::fromJsonObject(QJsonObject json) {

    m_successful_isValid = ::OpenAPI::fromJsonValue(m_successful, json[QString("successful")]);
    m_successful_isSet = !json[QString("successful")].isNull() && m_successful_isValid;

    m_message_isValid = ::OpenAPI::fromJsonValue(m_message, json[QString("message")]);
    m_message_isSet = !json[QString("message")].isNull() && m_message_isValid;

    applyMinMaxConstraints();
}

QString OAISystemPasswordResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISystemPasswordResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_successful_isSet) {
        obj.insert(QString("successful"), ::OpenAPI::toJsonValue(m_successful));
    }
    if (m_message_isSet) {
        obj.insert(QString("message"), ::OpenAPI::toJsonValue(m_message));
    }
    return obj;
}

bool OAISystemPasswordResponse::isSuccessful() const {
    return m_successful;
}
void OAISystemPasswordResponse::setSuccessful(const bool &successful) {
	bool v = successful;
	this->m_successful = v;
    this->m_successful_isSet = true;
}

bool OAISystemPasswordResponse::is_successful_Set() const{
    return m_successful_isSet;
}

bool OAISystemPasswordResponse::is_successful_Valid() const{
    return m_successful_isValid;
}


QString OAISystemPasswordResponse::getMessage() const {
    return m_message;
}
void OAISystemPasswordResponse::setMessage(const QString &message) {
	QString v = message;
	this->m_message = v;
    this->m_message_isSet = true;
}

bool OAISystemPasswordResponse::is_message_Set() const{
    return m_message_isSet;
}

bool OAISystemPasswordResponse::is_message_Valid() const{
    return m_message_isValid;
}



bool OAISystemPasswordResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_successful_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISystemPasswordResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

bool OAISystemPasswordResponse::applyMinMaxConstraints() {
	bool anyMinMaxValueChanged = false;
	if (is_message_Set())
	{
		bool messageChanged = false;
		QString v = getMessage();
		if (messageChanged) { setMessage(v); anyMinMaxValueChanged = true; }
	}
	return anyMinMaxValueChanged;
}

} // namespace OpenAPI
