/**
 * OpenAPI ColorBox
 * This is a REST API for the AJA ColorBox product.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@aja.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 *       Do not edit the class manually.
 *
 * Copyright (C) 2020-2022 AJA Video Systems Inc.  All rights reserved.
 */

/*
 * OAINetStatus.h
 *
 * 
 */

#ifndef OAINetStatus_H
#define OAINetStatus_H

#include <QJsonObject>

#include "OAIDHCPState.h"
#include "OAIInterfaceSetupState.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAINetStatus : public OAIObject {
public:
    OAINetStatus();
    OAINetStatus(QString json);
    ~OAINetStatus() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getMac() const;
    void setMac(const QString &mac);
    bool is_mac_Set() const;
    bool is_mac_Valid() const;

    bool isConnected() const;
    void setConnected(const bool &connected);
    bool is_connected_Set() const;
    bool is_connected_Valid() const;

    OAIDHCPState getDhcpState() const;
    void setDhcpState(const OAIDHCPState &dhcp_state);
    bool is_dhcp_state_Set() const;
    bool is_dhcp_state_Valid() const;

    OAIInterfaceSetupState getInterfaceSetupState() const;
    void setInterfaceSetupState(const OAIInterfaceSetupState &interface_setup_state);
    bool is_interface_setup_state_Set() const;
    bool is_interface_setup_state_Valid() const;

    QString getIpAddressOffered() const;
    void setIpAddressOffered(const QString &ip_address_offered);
    bool is_ip_address_offered_Set() const;
    bool is_ip_address_offered_Valid() const;

    qint32 getLinkErrors() const;
    void setLinkErrors(const qint32 &link_errors);
    bool is_link_errors_Set() const;
    bool is_link_errors_Valid() const;

    QString getLinkState() const;
    void setLinkState(const QString &link_state);
    bool is_link_state_Set() const;
    bool is_link_state_Valid() const;

    QString getLldpChassisId() const;
    void setLldpChassisId(const QString &lldp_chassis_id);
    bool is_lldp_chassis_id_Set() const;
    bool is_lldp_chassis_id_Valid() const;

    QString getLldpPortId() const;
    void setLldpPortId(const QString &lldp_port_id);
    bool is_lldp_port_id_Set() const;
    bool is_lldp_port_id_Valid() const;

    QString getLldpName() const;
    void setLldpName(const QString &lldp_name);
    bool is_lldp_name_Set() const;
    bool is_lldp_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

    bool applyMinMaxConstraints();
private:
    void initializeModel();

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_mac;
    bool m_mac_isSet;
    bool m_mac_isValid;

    bool m_connected;
    bool m_connected_isSet;
    bool m_connected_isValid;

    OAIDHCPState m_dhcp_state;
    bool m_dhcp_state_isSet;
    bool m_dhcp_state_isValid;

    OAIInterfaceSetupState m_interface_setup_state;
    bool m_interface_setup_state_isSet;
    bool m_interface_setup_state_isValid;

    QString m_ip_address_offered;
    bool m_ip_address_offered_isSet;
    bool m_ip_address_offered_isValid;

    qint32 m_link_errors;
    bool m_link_errors_isSet;
    bool m_link_errors_isValid;

    QString m_link_state;
    bool m_link_state_isSet;
    bool m_link_state_isValid;

    QString m_lldp_chassis_id;
    bool m_lldp_chassis_id_isSet;
    bool m_lldp_chassis_id_isValid;

    QString m_lldp_port_id;
    bool m_lldp_port_id_isSet;
    bool m_lldp_port_id_isValid;

    QString m_lldp_name;
    bool m_lldp_name_isSet;
    bool m_lldp_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINetStatus)

#endif // OAINetStatus_H
