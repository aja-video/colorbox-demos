/**
 * OpenAPI ColorBox
 * This is a REST API for the AJA ColorBox product.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@aja.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 *       Do not edit the class manually.
 *
 * Copyright (C) 2020-2022 AJA Video Systems, Inc.  All rights reserved.
 */

/*
 * OAISystemConfig.h
 *
 * 
 */

#ifndef OAISystemConfig_H
#define OAISystemConfig_H

#include <QJsonObject>

#include "OAITransformMode.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISystemConfig : public OAIObject {
public:
    OAISystemConfig();
    OAISystemConfig(QString json);
    ~OAISystemConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getHostName() const;
    void setHostName(const QString &host_name);
    bool is_host_name_Set() const;
    bool is_host_name_Valid() const;

    QString getSystemOrganizationName() const;
    void setSystemOrganizationName(const QString &system_organization_name);
    bool is_system_organization_name_Set() const;
    bool is_system_organization_name_Valid() const;

    bool isSsdpEnable() const;
    void setSsdpEnable(const bool &ssdp_enable);
    bool is_ssdp_enable_Set() const;
    bool is_ssdp_enable_Valid() const;

    bool isIdentify() const;
    void setIdentify(const bool &identify);
    bool is_identify_Set() const;
    bool is_identify_Valid() const;

    bool isUpdateRequest() const;
    void setUpdateRequest(const bool &update_request);
    bool is_update_request_Set() const;
    bool is_update_request_Valid() const;

    bool isReboot() const;
    void setReboot(const bool &reboot);
    bool is_reboot_Set() const;
    bool is_reboot_Valid() const;

    bool isFactoryPreset() const;
    void setFactoryPreset(const bool &factory_preset);
    bool is_factory_preset_Set() const;
    bool is_factory_preset_Valid() const;

    bool isFactoryReset() const;
    void setFactoryReset(const bool &factory_reset);
    bool is_factory_reset_Set() const;
    bool is_factory_reset_Valid() const;

    OAITransformMode getTransformMode() const;
    void setTransformMode(const OAITransformMode &transform_mode);
    bool is_transform_mode_Set() const;
    bool is_transform_mode_Valid() const;

    bool isPreviewAncEnable() const;
    void setPreviewAncEnable(const bool &preview_anc_enable);
    bool is_preview_anc_enable_Set() const;
    bool is_preview_anc_enable_Valid() const;

    bool isAuthenticationEnable() const;
    void setAuthenticationEnable(const bool &authentication_enable);
    bool is_authentication_enable_Set() const;
    bool is_authentication_enable_Valid() const;

    double getFanSpeed() const;
    void setFanSpeed(const double &fan_speed);
    bool is_fan_speed_Set() const;
    bool is_fan_speed_Valid() const;
    double fanSpeedMin() const;
    double fanSpeedMax() const;

    qint32 getStartupPreset() const;
    void setStartupPreset(const qint32 &startup_preset);
    bool is_startup_preset_Set() const;
    bool is_startup_preset_Valid() const;
    qint32 startupPresetMin() const;
    qint32 startupPresetMax() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

    bool applyMinMaxConstraints();
private:
    void initializeModel();

    QString m_host_name;
    bool m_host_name_isSet;
    bool m_host_name_isValid;

    QString m_system_organization_name;
    bool m_system_organization_name_isSet;
    bool m_system_organization_name_isValid;

    bool m_ssdp_enable;
    bool m_ssdp_enable_isSet;
    bool m_ssdp_enable_isValid;

    bool m_identify;
    bool m_identify_isSet;
    bool m_identify_isValid;

    bool m_update_request;
    bool m_update_request_isSet;
    bool m_update_request_isValid;

    bool m_reboot;
    bool m_reboot_isSet;
    bool m_reboot_isValid;

    bool m_factory_preset;
    bool m_factory_preset_isSet;
    bool m_factory_preset_isValid;

    bool m_factory_reset;
    bool m_factory_reset_isSet;
    bool m_factory_reset_isValid;

    OAITransformMode m_transform_mode;
    bool m_transform_mode_isSet;
    bool m_transform_mode_isValid;

    bool m_preview_anc_enable;
    bool m_preview_anc_enable_isSet;
    bool m_preview_anc_enable_isValid;

    bool m_authentication_enable;
    bool m_authentication_enable_isSet;
    bool m_authentication_enable_isValid;

    double m_fan_speed;
    bool m_fan_speed_isSet;
    bool m_fan_speed_isValid;

    qint32 m_startup_preset;
    bool m_startup_preset_isSet;
    bool m_startup_preset_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISystemConfig)

#endif // OAISystemConfig_H
