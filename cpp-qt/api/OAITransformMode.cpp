/**
 * OpenAPI ColorBox
 * This is a REST API for the AJA ColorBox product.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@aja.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 *       Do not edit the class manually.
 *
 * Copyright (C) 2020-2022 AJA Video Systems, Inc.  All rights reserved.
 */

#include "OAITransformMode.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITransformMode::OAITransformMode(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITransformMode::OAITransformMode() {
    this->initializeModel();
}

OAITransformMode::~OAITransformMode() {}

void OAITransformMode::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAITransformMode::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAITransformMode::fromJson(QString jsonString) {
    
    if ( jsonString.compare("LUT", Qt::CaseInsensitive) == 0) {
        m_value = eOAITransformMode::LUT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("COLORFRONT", Qt::CaseInsensitive) == 0) {
        m_value = eOAITransformMode::COLORFRONT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ORION", Qt::CaseInsensitive) == 0) {
        m_value = eOAITransformMode::ORION;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("BBC", Qt::CaseInsensitive) == 0) {
        m_value = eOAITransformMode::BBC;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NBC", Qt::CaseInsensitive) == 0) {
        m_value = eOAITransformMode::NBC;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAITransformMode::fromJsonValue(QJsonValue json) {
fromJson(json.toString());

    applyMinMaxConstraints();
}

QString OAITransformMode::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAITransformMode::LUT:
            val = "LUT";
            break;
        case eOAITransformMode::COLORFRONT:
            val = "COLORFRONT";
            break;
        case eOAITransformMode::ORION:
            val = "ORION";
            break;
        case eOAITransformMode::BBC:
            val = "BBC";
            break;
        case eOAITransformMode::NBC:
            val = "NBC";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAITransformMode::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAITransformMode::eOAITransformMode OAITransformMode::getValue() const {
    return m_value;
}

void OAITransformMode::setValue(const OAITransformMode::eOAITransformMode& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAITransformMode::isSet() const {
    
    return m_value_isSet;
}

bool OAITransformMode::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

bool OAITransformMode::applyMinMaxConstraints() {
	bool anyMinMaxValueChanged = false;
	return anyMinMaxValueChanged;
}

} // namespace OpenAPI
