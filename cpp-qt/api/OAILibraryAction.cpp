/**
 * OpenAPI ColorBox
 * This is a REST API for the AJA ColorBox product.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@aja.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 *       Do not edit the class manually.
 *
 * Copyright (C) 2020-2022 AJA Video Systems Inc.  All rights reserved.
 */

#include "OAILibraryAction.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILibraryAction::OAILibraryAction(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILibraryAction::OAILibraryAction() {
    this->initializeModel();
}

OAILibraryAction::~OAILibraryAction() {}

void OAILibraryAction::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAILibraryAction::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAILibraryAction::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Idle", Qt::CaseInsensitive) == 0) {
        m_value = eOAILibraryAction::IDLE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("DeleteEntry", Qt::CaseInsensitive) == 0) {
        m_value = eOAILibraryAction::DELETEENTRY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("StoreEntry", Qt::CaseInsensitive) == 0) {
        m_value = eOAILibraryAction::STOREENTRY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("RecallEntry", Qt::CaseInsensitive) == 0) {
        m_value = eOAILibraryAction::RECALLENTRY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SetUserName", Qt::CaseInsensitive) == 0) {
        m_value = eOAILibraryAction::SETUSERNAME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Capture", Qt::CaseInsensitive) == 0) {
        m_value = eOAILibraryAction::CAPTURE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Rescan", Qt::CaseInsensitive) == 0) {
        m_value = eOAILibraryAction::RESCAN;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAILibraryAction::fromJsonValue(QJsonValue json) {
fromJson(json.toString());

    applyMinMaxConstraints();
}

QString OAILibraryAction::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAILibraryAction::IDLE:
            val = "Idle";
            break;
        case eOAILibraryAction::DELETEENTRY:
            val = "DeleteEntry";
            break;
        case eOAILibraryAction::STOREENTRY:
            val = "StoreEntry";
            break;
        case eOAILibraryAction::RECALLENTRY:
            val = "RecallEntry";
            break;
        case eOAILibraryAction::SETUSERNAME:
            val = "SetUserName";
            break;
        case eOAILibraryAction::CAPTURE:
            val = "Capture";
            break;
        case eOAILibraryAction::RESCAN:
            val = "Rescan";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAILibraryAction::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAILibraryAction::eOAILibraryAction OAILibraryAction::getValue() const {
    return m_value;
}

void OAILibraryAction::setValue(const OAILibraryAction::eOAILibraryAction& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAILibraryAction::isSet() const {
    
    return m_value_isSet;
}

bool OAILibraryAction::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

bool OAILibraryAction::applyMinMaxConstraints() {
	bool anyMinMaxValueChanged = false;
	return anyMinMaxValueChanged;
}

} // namespace OpenAPI
