/**
 * OpenAPI Soji
 * This is a REST API for the AJA Soji product.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@aja.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 *       Do not edit the class manually.
 *
 * Copyright (C) 2020-2022 AJA Video Systems, Inc.  All rights reserved.
 */

/*
 * OAINetParams.h
 *
 * 
 */

#ifndef OAINetParams_H
#define OAINetParams_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAINetParams : public OAIObject {
public:
    OAINetParams();
    OAINetParams(QString json);
    ~OAINetParams() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAddress() const;
    void setAddress(const QString &address);
    bool is_address_Set() const;
    bool is_address_Valid() const;

    QString getSubnet() const;
    void setSubnet(const QString &subnet);
    bool is_subnet_Set() const;
    bool is_subnet_Valid() const;

    QString getGateway() const;
    void setGateway(const QString &gateway);
    bool is_gateway_Set() const;
    bool is_gateway_Valid() const;

    QString getDnsServer1() const;
    void setDnsServer1(const QString &dns_server1);
    bool is_dns_server1_Set() const;
    bool is_dns_server1_Valid() const;

    QString getDnsServer2() const;
    void setDnsServer2(const QString &dns_server2);
    bool is_dns_server2_Set() const;
    bool is_dns_server2_Valid() const;

    QString getDnsSearch() const;
    void setDnsSearch(const QString &dns_search);
    bool is_dns_search_Set() const;
    bool is_dns_search_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

    virtual bool applyMinMaxConstraints();
private:
    void initializeModel();

    QString address;
    bool m_address_isSet;
    bool m_address_isValid;

    QString subnet;
    bool m_subnet_isSet;
    bool m_subnet_isValid;

    QString gateway;
    bool m_gateway_isSet;
    bool m_gateway_isValid;

    QString dns_server1;
    bool m_dns_server1_isSet;
    bool m_dns_server1_isValid;

    QString dns_server2;
    bool m_dns_server2_isSet;
    bool m_dns_server2_isValid;

    QString dns_search;
    bool m_dns_search_isSet;
    bool m_dns_search_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINetParams)

#endif // OAINetParams_H
