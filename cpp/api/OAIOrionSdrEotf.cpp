/**
 * OpenAPI Soji
 * This is a REST API for the AJA Soji product.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@aja.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 *       Do not edit the class manually.
 *
 * Copyright (C) 2020-2022 AJA Video Systems, Inc.  All rights reserved.
 */

#include "OAIOrionSdrEotf.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrionSdrEotf::OAIOrionSdrEotf(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrionSdrEotf::OAIOrionSdrEotf() {
    this->initializeModel();
}

OAIOrionSdrEotf::~OAIOrionSdrEotf() {}

void OAIOrionSdrEotf::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIOrionSdrEotf::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIOrionSdrEotf::fromJson(QString jsonString) {
    
    if ( jsonString.compare("2.4 Gamma", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrionSdrEotf::_2_4_GAMMA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("2.2 Gamma", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrionSdrEotf::_2_2_GAMMA;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Piecewise ~2.4", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrionSdrEotf::PIECEWISE_2_4;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Piecewise ~2.2", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrionSdrEotf::PIECEWISE_2_2;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIOrionSdrEotf::fromJsonValue(QJsonValue json) {
fromJson(json.toString());

    applyMinMaxConstraints();
}

QString OAIOrionSdrEotf::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIOrionSdrEotf::_2_4_GAMMA:
            val = "2.4 Gamma";
            break;
        case eOAIOrionSdrEotf::_2_2_GAMMA:
            val = "2.2 Gamma";
            break;
        case eOAIOrionSdrEotf::PIECEWISE_2_4:
            val = "Piecewise ~2.4";
            break;
        case eOAIOrionSdrEotf::PIECEWISE_2_2:
            val = "Piecewise ~2.2";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIOrionSdrEotf::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIOrionSdrEotf::eOAIOrionSdrEotf OAIOrionSdrEotf::getValue() const {
    return m_value;
}

void OAIOrionSdrEotf::setValue(const OAIOrionSdrEotf::eOAIOrionSdrEotf& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIOrionSdrEotf::isSet() const {
    
    return m_value_isSet;
}

bool OAIOrionSdrEotf::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

bool OAIOrionSdrEotf::applyMinMaxConstraints() {
	bool valueChanged = false;
	return valueChanged;
}

} // namespace OpenAPI
