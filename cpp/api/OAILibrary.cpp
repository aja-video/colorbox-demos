/**
 * OpenAPI Soji
 * This is a REST API for the AJA Soji product.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@aja.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 *       Do not edit the class manually.
 *
 * Copyright (C) 2020-2022 AJA Video Systems, Inc.  All rights reserved.
 */

#include "OAILibrary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILibrary::OAILibrary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILibrary::OAILibrary() {
    this->initializeModel();
}

OAILibrary::~OAILibrary() {}

void OAILibrary::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAILibrary::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAILibrary::fromJson(QString jsonString) {
    
    if ( jsonString.compare("1D LUT", Qt::CaseInsensitive) == 0) {
        m_value = eOAILibrary::_1D_LUT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("3D LUT", Qt::CaseInsensitive) == 0) {
        m_value = eOAILibrary::_3D_LUT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Matrix", Qt::CaseInsensitive) == 0) {
        m_value = eOAILibrary::MATRIX;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Image", Qt::CaseInsensitive) == 0) {
        m_value = eOAILibrary::IMAGE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("systemPreset", Qt::CaseInsensitive) == 0) {
        m_value = eOAILibrary::SYSTEMPRESET;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAILibrary::fromJsonValue(QJsonValue json) {
fromJson(json.toString());

    applyMinMaxConstraints();
}

QString OAILibrary::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAILibrary::_1D_LUT:
            val = "1D LUT";
            break;
        case eOAILibrary::_3D_LUT:
            val = "3D LUT";
            break;
        case eOAILibrary::MATRIX:
            val = "Matrix";
            break;
        case eOAILibrary::IMAGE:
            val = "Image";
            break;
        case eOAILibrary::SYSTEMPRESET:
            val = "systemPreset";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAILibrary::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAILibrary::eOAILibrary OAILibrary::getValue() const {
    return m_value;
}

void OAILibrary::setValue(const OAILibrary::eOAILibrary& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAILibrary::isSet() const {
    
    return m_value_isSet;
}

bool OAILibrary::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

bool OAILibrary::applyMinMaxConstraints() {
	bool valueChanged = false;
	return valueChanged;
}

} // namespace OpenAPI
