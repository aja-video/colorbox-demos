/**
 * OpenAPI Soji
 * This is a REST API for the AJA Soji product.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@aja.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 *       Do not edit the class manually.
 *
 * Copyright (C) 2020-2022 AJA Video Systems, Inc.  All rights reserved.
 */

/*
 * OAIProcAmp.h
 *
 * 
 */

#ifndef OAIProcAmp_H
#define OAIProcAmp_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIProcAmp : public OAIObject {
public:
    OAIProcAmp();
    OAIProcAmp(QString json);
    ~OAIProcAmp() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getBlack() const;
    void setBlack(const double &black);
    bool is_black_Set() const;
    bool is_black_Valid() const;
    double blackMin() const;
    double blackMax() const;

    double getGain() const;
    void setGain(const double &gain);
    bool is_gain_Set() const;
    bool is_gain_Valid() const;
    double gainMin() const;
    double gainMax() const;

    double getHue() const;
    void setHue(const double &hue);
    bool is_hue_Set() const;
    bool is_hue_Valid() const;
    double hueMin() const;
    double hueMax() const;

    double getSat() const;
    void setSat(const double &sat);
    bool is_sat_Set() const;
    bool is_sat_Valid() const;
    double satMin() const;
    double satMax() const;

    QString getUnitsBlack() const;
    void setUnitsBlack(const QString &units_black);
    bool is_units_black_Set() const;
    bool is_units_black_Valid() const;

    QString getUnitsGain() const;
    void setUnitsGain(const QString &units_gain);
    bool is_units_gain_Set() const;
    bool is_units_gain_Valid() const;

    QString getUnitsHue() const;
    void setUnitsHue(const QString &units_hue);
    bool is_units_hue_Set() const;
    bool is_units_hue_Valid() const;

    QString getUnitsSat() const;
    void setUnitsSat(const QString &units_sat);
    bool is_units_sat_Set() const;
    bool is_units_sat_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

    virtual bool applyMinMaxConstraints();
private:
    void initializeModel();

    double black;
    bool m_black_isSet;
    bool m_black_isValid;

    double gain;
    bool m_gain_isSet;
    bool m_gain_isValid;

    double hue;
    bool m_hue_isSet;
    bool m_hue_isValid;

    double sat;
    bool m_sat_isSet;
    bool m_sat_isValid;

    QString units_black;
    bool m_units_black_isSet;
    bool m_units_black_isValid;

    QString units_gain;
    bool m_units_gain_isSet;
    bool m_units_gain_isValid;

    QString units_hue;
    bool m_units_hue_isSet;
    bool m_units_hue_isValid;

    QString units_sat;
    bool m_units_sat_isSet;
    bool m_units_sat_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProcAmp)

#endif // OAIProcAmp_H
