/*
OpenAPI ColorBox

This is a REST API for the AJA ColorBox product.

The version of the OpenAPI document: 1.0.0
Contact: support@aja.com

NOTE: This code is auto generated by OpenAPI Generator (https://openapi-generator.tech).
      Do not edit this code manually.

Copyright (C) 2020-2022 AJA Video Systems Inc.  All rights reserved.
*/

package openapi

import (
	"encoding/json"
)

// SystemDiscover struct for SystemDiscover
type SystemDiscover struct {
	ServiceDescription *string `json:"serviceDescription,omitempty"`
	ServiceType *string `json:"serviceType,omitempty"`
	ServiceDomain *string `json:"serviceDomain,omitempty"`
	HostName *string `json:"hostName,omitempty"`
	IpAddress *string `json:"ipAddress,omitempty"`
	Port *float32 `json:"port,omitempty"`
	DeviceName *string `json:"deviceName,omitempty"`
	Description *string `json:"description,omitempty"`
	BoardType *string `json:"boardType,omitempty"`
	BoardNumber *string `json:"boardNumber,omitempty"`
	BoardID *string `json:"boardID,omitempty"`
}

// NewSystemDiscover instantiates a new SystemDiscover object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemDiscover() *SystemDiscover {
	this := SystemDiscover{}
	return &this
}

// NewSystemDiscoverWithDefaults instantiates a new SystemDiscover object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemDiscoverWithDefaults() *SystemDiscover {
	this := SystemDiscover{}
	return &this
}

// GetServiceDescription returns the ServiceDescription field value if set, zero value otherwise.
func (o *SystemDiscover) GetServiceDescription() string {
	if o == nil || o.ServiceDescription == nil {
		var ret string
		return ret
	}
	return *o.ServiceDescription
}

// GetServiceDescriptionOk returns a tuple with the ServiceDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemDiscover) GetServiceDescriptionOk() (*string, bool) {
	if o == nil || o.ServiceDescription == nil {
		return nil, false
	}
	return o.ServiceDescription, true
}



// HasServiceDescription returns a boolean if a field has been set.
func (o *SystemDiscover) HasServiceDescription() bool {
	if o != nil && o.ServiceDescription != nil {
		return true
	}

	return false
}

// SetServiceDescription gets a reference to the given string and assigns it to the ServiceDescription field.
func (o *SystemDiscover) SetServiceDescription(v string) {
	tmp := v
	o.ServiceDescription = &tmp
}

// GetServiceType returns the ServiceType field value if set, zero value otherwise.
func (o *SystemDiscover) GetServiceType() string {
	if o == nil || o.ServiceType == nil {
		var ret string
		return ret
	}
	return *o.ServiceType
}

// GetServiceTypeOk returns a tuple with the ServiceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemDiscover) GetServiceTypeOk() (*string, bool) {
	if o == nil || o.ServiceType == nil {
		return nil, false
	}
	return o.ServiceType, true
}



// HasServiceType returns a boolean if a field has been set.
func (o *SystemDiscover) HasServiceType() bool {
	if o != nil && o.ServiceType != nil {
		return true
	}

	return false
}

// SetServiceType gets a reference to the given string and assigns it to the ServiceType field.
func (o *SystemDiscover) SetServiceType(v string) {
	tmp := v
	o.ServiceType = &tmp
}

// GetServiceDomain returns the ServiceDomain field value if set, zero value otherwise.
func (o *SystemDiscover) GetServiceDomain() string {
	if o == nil || o.ServiceDomain == nil {
		var ret string
		return ret
	}
	return *o.ServiceDomain
}

// GetServiceDomainOk returns a tuple with the ServiceDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemDiscover) GetServiceDomainOk() (*string, bool) {
	if o == nil || o.ServiceDomain == nil {
		return nil, false
	}
	return o.ServiceDomain, true
}



// HasServiceDomain returns a boolean if a field has been set.
func (o *SystemDiscover) HasServiceDomain() bool {
	if o != nil && o.ServiceDomain != nil {
		return true
	}

	return false
}

// SetServiceDomain gets a reference to the given string and assigns it to the ServiceDomain field.
func (o *SystemDiscover) SetServiceDomain(v string) {
	tmp := v
	o.ServiceDomain = &tmp
}

// GetHostName returns the HostName field value if set, zero value otherwise.
func (o *SystemDiscover) GetHostName() string {
	if o == nil || o.HostName == nil {
		var ret string
		return ret
	}
	return *o.HostName
}

// GetHostNameOk returns a tuple with the HostName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemDiscover) GetHostNameOk() (*string, bool) {
	if o == nil || o.HostName == nil {
		return nil, false
	}
	return o.HostName, true
}



// HasHostName returns a boolean if a field has been set.
func (o *SystemDiscover) HasHostName() bool {
	if o != nil && o.HostName != nil {
		return true
	}

	return false
}

// SetHostName gets a reference to the given string and assigns it to the HostName field.
func (o *SystemDiscover) SetHostName(v string) {
	tmp := v
	o.HostName = &tmp
}

// GetIpAddress returns the IpAddress field value if set, zero value otherwise.
func (o *SystemDiscover) GetIpAddress() string {
	if o == nil || o.IpAddress == nil {
		var ret string
		return ret
	}
	return *o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemDiscover) GetIpAddressOk() (*string, bool) {
	if o == nil || o.IpAddress == nil {
		return nil, false
	}
	return o.IpAddress, true
}



// HasIpAddress returns a boolean if a field has been set.
func (o *SystemDiscover) HasIpAddress() bool {
	if o != nil && o.IpAddress != nil {
		return true
	}

	return false
}

// SetIpAddress gets a reference to the given string and assigns it to the IpAddress field.
func (o *SystemDiscover) SetIpAddress(v string) {
	tmp := v
	o.IpAddress = &tmp
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *SystemDiscover) GetPort() float32 {
	if o == nil || o.Port == nil {
		var ret float32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemDiscover) GetPortOk() (*float32, bool) {
	if o == nil || o.Port == nil {
		return nil, false
	}
	return o.Port, true
}



// HasPort returns a boolean if a field has been set.
func (o *SystemDiscover) HasPort() bool {
	if o != nil && o.Port != nil {
		return true
	}

	return false
}

// SetPort gets a reference to the given float32 and assigns it to the Port field.
func (o *SystemDiscover) SetPort(v float32) {
	tmp := v
	o.Port = &tmp
}

// GetDeviceName returns the DeviceName field value if set, zero value otherwise.
func (o *SystemDiscover) GetDeviceName() string {
	if o == nil || o.DeviceName == nil {
		var ret string
		return ret
	}
	return *o.DeviceName
}

// GetDeviceNameOk returns a tuple with the DeviceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemDiscover) GetDeviceNameOk() (*string, bool) {
	if o == nil || o.DeviceName == nil {
		return nil, false
	}
	return o.DeviceName, true
}



// HasDeviceName returns a boolean if a field has been set.
func (o *SystemDiscover) HasDeviceName() bool {
	if o != nil && o.DeviceName != nil {
		return true
	}

	return false
}

// SetDeviceName gets a reference to the given string and assigns it to the DeviceName field.
func (o *SystemDiscover) SetDeviceName(v string) {
	tmp := v
	o.DeviceName = &tmp
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *SystemDiscover) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemDiscover) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}



// HasDescription returns a boolean if a field has been set.
func (o *SystemDiscover) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *SystemDiscover) SetDescription(v string) {
	tmp := v
	o.Description = &tmp
}

// GetBoardType returns the BoardType field value if set, zero value otherwise.
func (o *SystemDiscover) GetBoardType() string {
	if o == nil || o.BoardType == nil {
		var ret string
		return ret
	}
	return *o.BoardType
}

// GetBoardTypeOk returns a tuple with the BoardType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemDiscover) GetBoardTypeOk() (*string, bool) {
	if o == nil || o.BoardType == nil {
		return nil, false
	}
	return o.BoardType, true
}



// HasBoardType returns a boolean if a field has been set.
func (o *SystemDiscover) HasBoardType() bool {
	if o != nil && o.BoardType != nil {
		return true
	}

	return false
}

// SetBoardType gets a reference to the given string and assigns it to the BoardType field.
func (o *SystemDiscover) SetBoardType(v string) {
	tmp := v
	o.BoardType = &tmp
}

// GetBoardNumber returns the BoardNumber field value if set, zero value otherwise.
func (o *SystemDiscover) GetBoardNumber() string {
	if o == nil || o.BoardNumber == nil {
		var ret string
		return ret
	}
	return *o.BoardNumber
}

// GetBoardNumberOk returns a tuple with the BoardNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemDiscover) GetBoardNumberOk() (*string, bool) {
	if o == nil || o.BoardNumber == nil {
		return nil, false
	}
	return o.BoardNumber, true
}



// HasBoardNumber returns a boolean if a field has been set.
func (o *SystemDiscover) HasBoardNumber() bool {
	if o != nil && o.BoardNumber != nil {
		return true
	}

	return false
}

// SetBoardNumber gets a reference to the given string and assigns it to the BoardNumber field.
func (o *SystemDiscover) SetBoardNumber(v string) {
	tmp := v
	o.BoardNumber = &tmp
}

// GetBoardID returns the BoardID field value if set, zero value otherwise.
func (o *SystemDiscover) GetBoardID() string {
	if o == nil || o.BoardID == nil {
		var ret string
		return ret
	}
	return *o.BoardID
}

// GetBoardIDOk returns a tuple with the BoardID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemDiscover) GetBoardIDOk() (*string, bool) {
	if o == nil || o.BoardID == nil {
		return nil, false
	}
	return o.BoardID, true
}



// HasBoardID returns a boolean if a field has been set.
func (o *SystemDiscover) HasBoardID() bool {
	if o != nil && o.BoardID != nil {
		return true
	}

	return false
}

// SetBoardID gets a reference to the given string and assigns it to the BoardID field.
func (o *SystemDiscover) SetBoardID(v string) {
	tmp := v
	o.BoardID = &tmp
}

func (o SystemDiscover) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ServiceDescription != nil {
		toSerialize["serviceDescription"] = o.ServiceDescription
	}
	if o.ServiceType != nil {
		toSerialize["serviceType"] = o.ServiceType
	}
	if o.ServiceDomain != nil {
		toSerialize["serviceDomain"] = o.ServiceDomain
	}
	if o.HostName != nil {
		toSerialize["hostName"] = o.HostName
	}
	if o.IpAddress != nil {
		toSerialize["ipAddress"] = o.IpAddress
	}
	if o.Port != nil {
		toSerialize["port"] = o.Port
	}
	if o.DeviceName != nil {
		toSerialize["deviceName"] = o.DeviceName
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.BoardType != nil {
		toSerialize["boardType"] = o.BoardType
	}
	if o.BoardNumber != nil {
		toSerialize["boardNumber"] = o.BoardNumber
	}
	if o.BoardID != nil {
		toSerialize["boardID"] = o.BoardID
	}
	return json.Marshal(toSerialize)
}


func (o *SystemDiscover) ApplyMinMaxConstraints() bool {
	var valueChanged bool = false
	if o.HasServiceDescription() {
		var fieldChanged = false
		var v string = o.GetServiceDescription()
		if fieldChanged {
			o.SetServiceDescription(v)
			valueChanged = true
		}
	}
	if o.HasServiceType() {
		var fieldChanged = false
		var v string = o.GetServiceType()
		if fieldChanged {
			o.SetServiceType(v)
			valueChanged = true
		}
	}
	if o.HasServiceDomain() {
		var fieldChanged = false
		var v string = o.GetServiceDomain()
		if fieldChanged {
			o.SetServiceDomain(v)
			valueChanged = true
		}
	}
	if o.HasHostName() {
		var fieldChanged = false
		var v string = o.GetHostName()
		if fieldChanged {
			o.SetHostName(v)
			valueChanged = true
		}
	}
	if o.HasIpAddress() {
		var fieldChanged = false
		var v string = o.GetIpAddress()
		if fieldChanged {
			o.SetIpAddress(v)
			valueChanged = true
		}
	}
	if o.HasPort() {
		var fieldChanged = false
		var v float32 = o.GetPort()
		if fieldChanged {
			o.SetPort(v)
			valueChanged = true
		}
	}
	if o.HasDeviceName() {
		var fieldChanged = false
		var v string = o.GetDeviceName()
		if fieldChanged {
			o.SetDeviceName(v)
			valueChanged = true
		}
	}
	if o.HasDescription() {
		var fieldChanged = false
		var v string = o.GetDescription()
		if fieldChanged {
			o.SetDescription(v)
			valueChanged = true
		}
	}
	if o.HasBoardType() {
		var fieldChanged = false
		var v string = o.GetBoardType()
		if fieldChanged {
			o.SetBoardType(v)
			valueChanged = true
		}
	}
	if o.HasBoardNumber() {
		var fieldChanged = false
		var v string = o.GetBoardNumber()
		if fieldChanged {
			o.SetBoardNumber(v)
			valueChanged = true
		}
	}
	if o.HasBoardID() {
		var fieldChanged = false
		var v string = o.GetBoardID()
		if fieldChanged {
			o.SetBoardID(v)
			valueChanged = true
		}
	}
	return valueChanged
}

type NullableSystemDiscover struct {
	value *SystemDiscover
	isSet bool
}

func (v NullableSystemDiscover) Get() *SystemDiscover {
	return v.value
}

func (v *NullableSystemDiscover) Set(val *SystemDiscover) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemDiscover) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemDiscover) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemDiscover(val *SystemDiscover) *NullableSystemDiscover {
	return &NullableSystemDiscover{value: val, isSet: true}
}

func (v NullableSystemDiscover) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemDiscover) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


