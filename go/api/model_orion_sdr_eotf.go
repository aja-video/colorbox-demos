/*
OpenAPI ColorBox

This is a REST API for the AJA ColorBox product.

The version of the OpenAPI document: 1.0.0
Contact: support@aja.com

NOTE: This code is auto generated by OpenAPI Generator (https://openapi-generator.tech).
      Do not edit this code manually.

Copyright (C) 2020-2022 AJA Video Systems, Inc.  All rights reserved.
*/

package openapi

import (
	"encoding/json"
	"fmt"
)

// OrionSdrEotf the model 'OrionSdrEotf'
type OrionSdrEotf string

// List of OrionSdrEotf
const (
	ORIONSDREOTF__2_4_GAMMA OrionSdrEotf = "2.4 Gamma"
	ORIONSDREOTF__2_2_GAMMA OrionSdrEotf = "2.2 Gamma"
	ORIONSDREOTF_PIECEWISE_2_4 OrionSdrEotf = "Piecewise ~2.4"
	ORIONSDREOTF_PIECEWISE_2_2 OrionSdrEotf = "Piecewise ~2.2"
)

// All allowed values of OrionSdrEotf enum
var AllowedOrionSdrEotfEnumValues = []OrionSdrEotf{
	"2.4 Gamma",
	"2.2 Gamma",
	"Piecewise ~2.4",
	"Piecewise ~2.2",
}

func (v *OrionSdrEotf) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := OrionSdrEotf(value)
	for _, existing := range AllowedOrionSdrEotfEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid OrionSdrEotf", value)
}

// NewOrionSdrEotfFromValue returns a pointer to a valid OrionSdrEotf
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewOrionSdrEotfFromValue(v string) (*OrionSdrEotf, error) {
	ev := OrionSdrEotf(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for OrionSdrEotf: valid values are %v", v, AllowedOrionSdrEotfEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v OrionSdrEotf) IsValid() bool {
	for _, existing := range AllowedOrionSdrEotfEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to OrionSdrEotf value
func (v OrionSdrEotf) Ptr() *OrionSdrEotf {
	return &v
}

type NullableOrionSdrEotf struct {
	value *OrionSdrEotf
	isSet bool
}

func (v NullableOrionSdrEotf) Get() *OrionSdrEotf {
	return v.value
}

func (v *NullableOrionSdrEotf) Set(val *OrionSdrEotf) {
	v.value = val
	v.isSet = true
}

func (v NullableOrionSdrEotf) IsSet() bool {
	return v.isSet
}

func (v *NullableOrionSdrEotf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrionSdrEotf(val *OrionSdrEotf) *NullableOrionSdrEotf {
	return &NullableOrionSdrEotf{value: val, isSet: true}
}

func (v NullableOrionSdrEotf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrionSdrEotf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

