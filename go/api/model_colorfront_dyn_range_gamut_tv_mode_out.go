/*
OpenAPI ColorBox

This is a REST API for the AJA ColorBox product.

The version of the OpenAPI document: 1.0.0
Contact: support@aja.com

NOTE: This code is auto generated by OpenAPI Generator (https://openapi-generator.tech).
      Do not edit this code manually.

Copyright (C) 2020-2022 AJA Video Systems Inc.  All rights reserved.
*/

package openapi

import (
	"encoding/json"
	"fmt"
)

// ColorfrontDynRangeGamutTvModeOut the model 'ColorfrontDynRangeGamutTvModeOut'
type ColorfrontDynRangeGamutTvModeOut string

// List of ColorfrontDynRangeGamutTvModeOut
const (
	COLORFRONTDYNRANGEGAMUTTVMODEOUT_SDR_BT_709 ColorfrontDynRangeGamutTvModeOut = "SDR BT.709"
	COLORFRONTDYNRANGEGAMUTTVMODEOUT_HLG_BT_2020 ColorfrontDynRangeGamutTvModeOut = "HLG BT.2020"
	COLORFRONTDYNRANGEGAMUTTVMODEOUT_PQ_BT_2020 ColorfrontDynRangeGamutTvModeOut = "PQ BT.2020"
	COLORFRONTDYNRANGEGAMUTTVMODEOUT_PQ_BT_2020_CONSTRAIN_P3 ColorfrontDynRangeGamutTvModeOut = "PQ BT.2020 ConstrainP3"
	COLORFRONTDYNRANGEGAMUTTVMODEOUT_SONY_S_LOG3_BT_2020 ColorfrontDynRangeGamutTvModeOut = "Sony SLog3 BT.2020"
)

// All allowed values of ColorfrontDynRangeGamutTvModeOut enum
var AllowedColorfrontDynRangeGamutTvModeOutEnumValues = []ColorfrontDynRangeGamutTvModeOut{
	"SDR BT.709",
	"HLG BT.2020",
	"PQ BT.2020",
	"PQ BT.2020 ConstrainP3",
	"Sony SLog3 BT.2020",
}

func (v *ColorfrontDynRangeGamutTvModeOut) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ColorfrontDynRangeGamutTvModeOut(value)
	for _, existing := range AllowedColorfrontDynRangeGamutTvModeOutEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ColorfrontDynRangeGamutTvModeOut", value)
}

// NewColorfrontDynRangeGamutTvModeOutFromValue returns a pointer to a valid ColorfrontDynRangeGamutTvModeOut
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewColorfrontDynRangeGamutTvModeOutFromValue(v string) (*ColorfrontDynRangeGamutTvModeOut, error) {
	ev := ColorfrontDynRangeGamutTvModeOut(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ColorfrontDynRangeGamutTvModeOut: valid values are %v", v, AllowedColorfrontDynRangeGamutTvModeOutEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ColorfrontDynRangeGamutTvModeOut) IsValid() bool {
	for _, existing := range AllowedColorfrontDynRangeGamutTvModeOutEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ColorfrontDynRangeGamutTvModeOut value
func (v ColorfrontDynRangeGamutTvModeOut) Ptr() *ColorfrontDynRangeGamutTvModeOut {
	return &v
}

type NullableColorfrontDynRangeGamutTvModeOut struct {
	value *ColorfrontDynRangeGamutTvModeOut
	isSet bool
}

func (v NullableColorfrontDynRangeGamutTvModeOut) Get() *ColorfrontDynRangeGamutTvModeOut {
	return v.value
}

func (v *NullableColorfrontDynRangeGamutTvModeOut) Set(val *ColorfrontDynRangeGamutTvModeOut) {
	v.value = val
	v.isSet = true
}

func (v NullableColorfrontDynRangeGamutTvModeOut) IsSet() bool {
	return v.isSet
}

func (v *NullableColorfrontDynRangeGamutTvModeOut) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableColorfrontDynRangeGamutTvModeOut(val *ColorfrontDynRangeGamutTvModeOut) *NullableColorfrontDynRangeGamutTvModeOut {
	return &NullableColorfrontDynRangeGamutTvModeOut{value: val, isSet: true}
}

func (v NullableColorfrontDynRangeGamutTvModeOut) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableColorfrontDynRangeGamutTvModeOut) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

