/*
OpenAPI ColorBox

This is a REST API for the AJA ColorBox product.

The version of the OpenAPI document: 1.0.0
Contact: support@aja.com

NOTE: This code is auto generated by OpenAPI Generator (https://openapi-generator.tech).
      Do not edit this code manually.

Copyright (C) 2020-2022 AJA Video Systems, Inc.  All rights reserved.
*/

package openapi

import (
	"encoding/json"
)

// WiFiDeviceStatus struct for WiFiDeviceStatus
type WiFiDeviceStatus struct {
	Name *string `json:"name,omitempty"`
	Mac *string `json:"mac,omitempty"`
	Address *string `json:"address,omitempty"`
	Subnet *string `json:"subnet,omitempty"`
	Gateway *string `json:"gateway,omitempty"`
	Networks []string `json:"networks,omitempty"`
	Connected *bool `json:"connected,omitempty"`
	DhcpState *DHCPState `json:"dhcpState,omitempty"`
	InterfaceSetupState *InterfaceSetupState `json:"interfaceSetupState,omitempty"`
	IpAddressOffered *string `json:"ipAddressOffered,omitempty"`
	LinkState *string `json:"linkState,omitempty"`
	WifiDongleState *string `json:"wifiDongleState,omitempty"`
	AuthenticationState *string `json:"authenticationState,omitempty"`
}

// NewWiFiDeviceStatus instantiates a new WiFiDeviceStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWiFiDeviceStatus() *WiFiDeviceStatus {
	this := WiFiDeviceStatus{}
	var connected bool = false
	this.Connected = &connected
	var dhcpState DHCPState = DHCPSTATE_DISABLED
	this.DhcpState = &dhcpState
	var interfaceSetupState InterfaceSetupState = INTERFACESETUPSTATE_UNINITIALIZED
	this.InterfaceSetupState = &interfaceSetupState
	return &this
}

// NewWiFiDeviceStatusWithDefaults instantiates a new WiFiDeviceStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWiFiDeviceStatusWithDefaults() *WiFiDeviceStatus {
	this := WiFiDeviceStatus{}
	var connected bool = false
	this.Connected = &connected
	var dhcpState DHCPState = DHCPSTATE_DISABLED
	this.DhcpState = &dhcpState
	var interfaceSetupState InterfaceSetupState = INTERFACESETUPSTATE_UNINITIALIZED
	this.InterfaceSetupState = &interfaceSetupState
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *WiFiDeviceStatus) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WiFiDeviceStatus) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}



// HasName returns a boolean if a field has been set.
func (o *WiFiDeviceStatus) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *WiFiDeviceStatus) SetName(v string) {
	tmp := v
	o.Name = &tmp
}

// GetMac returns the Mac field value if set, zero value otherwise.
func (o *WiFiDeviceStatus) GetMac() string {
	if o == nil || o.Mac == nil {
		var ret string
		return ret
	}
	return *o.Mac
}

// GetMacOk returns a tuple with the Mac field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WiFiDeviceStatus) GetMacOk() (*string, bool) {
	if o == nil || o.Mac == nil {
		return nil, false
	}
	return o.Mac, true
}



// HasMac returns a boolean if a field has been set.
func (o *WiFiDeviceStatus) HasMac() bool {
	if o != nil && o.Mac != nil {
		return true
	}

	return false
}

// SetMac gets a reference to the given string and assigns it to the Mac field.
func (o *WiFiDeviceStatus) SetMac(v string) {
	tmp := v
	o.Mac = &tmp
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *WiFiDeviceStatus) GetAddress() string {
	if o == nil || o.Address == nil {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WiFiDeviceStatus) GetAddressOk() (*string, bool) {
	if o == nil || o.Address == nil {
		return nil, false
	}
	return o.Address, true
}



// HasAddress returns a boolean if a field has been set.
func (o *WiFiDeviceStatus) HasAddress() bool {
	if o != nil && o.Address != nil {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *WiFiDeviceStatus) SetAddress(v string) {
	tmp := v
	o.Address = &tmp
}

// GetSubnet returns the Subnet field value if set, zero value otherwise.
func (o *WiFiDeviceStatus) GetSubnet() string {
	if o == nil || o.Subnet == nil {
		var ret string
		return ret
	}
	return *o.Subnet
}

// GetSubnetOk returns a tuple with the Subnet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WiFiDeviceStatus) GetSubnetOk() (*string, bool) {
	if o == nil || o.Subnet == nil {
		return nil, false
	}
	return o.Subnet, true
}



// HasSubnet returns a boolean if a field has been set.
func (o *WiFiDeviceStatus) HasSubnet() bool {
	if o != nil && o.Subnet != nil {
		return true
	}

	return false
}

// SetSubnet gets a reference to the given string and assigns it to the Subnet field.
func (o *WiFiDeviceStatus) SetSubnet(v string) {
	tmp := v
	o.Subnet = &tmp
}

// GetGateway returns the Gateway field value if set, zero value otherwise.
func (o *WiFiDeviceStatus) GetGateway() string {
	if o == nil || o.Gateway == nil {
		var ret string
		return ret
	}
	return *o.Gateway
}

// GetGatewayOk returns a tuple with the Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WiFiDeviceStatus) GetGatewayOk() (*string, bool) {
	if o == nil || o.Gateway == nil {
		return nil, false
	}
	return o.Gateway, true
}



// HasGateway returns a boolean if a field has been set.
func (o *WiFiDeviceStatus) HasGateway() bool {
	if o != nil && o.Gateway != nil {
		return true
	}

	return false
}

// SetGateway gets a reference to the given string and assigns it to the Gateway field.
func (o *WiFiDeviceStatus) SetGateway(v string) {
	tmp := v
	o.Gateway = &tmp
}

// GetNetworks returns the Networks field value if set, zero value otherwise.
func (o *WiFiDeviceStatus) GetNetworks() []string {
	if o == nil || o.Networks == nil {
		var ret []string
		return ret
	}
	return o.Networks
}

// GetNetworksOk returns a tuple with the Networks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WiFiDeviceStatus) GetNetworksOk() ([]string, bool) {
	if o == nil || o.Networks == nil {
		return nil, false
	}
	return o.Networks, true
}



// HasNetworks returns a boolean if a field has been set.
func (o *WiFiDeviceStatus) HasNetworks() bool {
	if o != nil && o.Networks != nil {
		return true
	}

	return false
}

// SetNetworks gets a reference to the given []string and assigns it to the Networks field.
func (o *WiFiDeviceStatus) SetNetworks(v []string) {
	tmp := v
	o.Networks = tmp
}

// GetConnected returns the Connected field value if set, zero value otherwise.
func (o *WiFiDeviceStatus) GetConnected() bool {
	if o == nil || o.Connected == nil {
		var ret bool
		return ret
	}
	return *o.Connected
}

// GetConnectedOk returns a tuple with the Connected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WiFiDeviceStatus) GetConnectedOk() (*bool, bool) {
	if o == nil || o.Connected == nil {
		return nil, false
	}
	return o.Connected, true
}



// HasConnected returns a boolean if a field has been set.
func (o *WiFiDeviceStatus) HasConnected() bool {
	if o != nil && o.Connected != nil {
		return true
	}

	return false
}

// SetConnected gets a reference to the given bool and assigns it to the Connected field.
func (o *WiFiDeviceStatus) SetConnected(v bool) {
	tmp := v
	o.Connected = &tmp
}

// GetDhcpState returns the DhcpState field value if set, zero value otherwise.
func (o *WiFiDeviceStatus) GetDhcpState() DHCPState {
	if o == nil || o.DhcpState == nil {
		var ret DHCPState
		return ret
	}
	return *o.DhcpState
}

// GetDhcpStateOk returns a tuple with the DhcpState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WiFiDeviceStatus) GetDhcpStateOk() (*DHCPState, bool) {
	if o == nil || o.DhcpState == nil {
		return nil, false
	}
	return o.DhcpState, true
}



// HasDhcpState returns a boolean if a field has been set.
func (o *WiFiDeviceStatus) HasDhcpState() bool {
	if o != nil && o.DhcpState != nil {
		return true
	}

	return false
}

// SetDhcpState gets a reference to the given DHCPState and assigns it to the DhcpState field.
func (o *WiFiDeviceStatus) SetDhcpState(v DHCPState) {
	tmp := v
	o.DhcpState = &tmp
}

// GetInterfaceSetupState returns the InterfaceSetupState field value if set, zero value otherwise.
func (o *WiFiDeviceStatus) GetInterfaceSetupState() InterfaceSetupState {
	if o == nil || o.InterfaceSetupState == nil {
		var ret InterfaceSetupState
		return ret
	}
	return *o.InterfaceSetupState
}

// GetInterfaceSetupStateOk returns a tuple with the InterfaceSetupState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WiFiDeviceStatus) GetInterfaceSetupStateOk() (*InterfaceSetupState, bool) {
	if o == nil || o.InterfaceSetupState == nil {
		return nil, false
	}
	return o.InterfaceSetupState, true
}



// HasInterfaceSetupState returns a boolean if a field has been set.
func (o *WiFiDeviceStatus) HasInterfaceSetupState() bool {
	if o != nil && o.InterfaceSetupState != nil {
		return true
	}

	return false
}

// SetInterfaceSetupState gets a reference to the given InterfaceSetupState and assigns it to the InterfaceSetupState field.
func (o *WiFiDeviceStatus) SetInterfaceSetupState(v InterfaceSetupState) {
	tmp := v
	o.InterfaceSetupState = &tmp
}

// GetIpAddressOffered returns the IpAddressOffered field value if set, zero value otherwise.
func (o *WiFiDeviceStatus) GetIpAddressOffered() string {
	if o == nil || o.IpAddressOffered == nil {
		var ret string
		return ret
	}
	return *o.IpAddressOffered
}

// GetIpAddressOfferedOk returns a tuple with the IpAddressOffered field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WiFiDeviceStatus) GetIpAddressOfferedOk() (*string, bool) {
	if o == nil || o.IpAddressOffered == nil {
		return nil, false
	}
	return o.IpAddressOffered, true
}



// HasIpAddressOffered returns a boolean if a field has been set.
func (o *WiFiDeviceStatus) HasIpAddressOffered() bool {
	if o != nil && o.IpAddressOffered != nil {
		return true
	}

	return false
}

// SetIpAddressOffered gets a reference to the given string and assigns it to the IpAddressOffered field.
func (o *WiFiDeviceStatus) SetIpAddressOffered(v string) {
	tmp := v
	o.IpAddressOffered = &tmp
}

// GetLinkState returns the LinkState field value if set, zero value otherwise.
func (o *WiFiDeviceStatus) GetLinkState() string {
	if o == nil || o.LinkState == nil {
		var ret string
		return ret
	}
	return *o.LinkState
}

// GetLinkStateOk returns a tuple with the LinkState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WiFiDeviceStatus) GetLinkStateOk() (*string, bool) {
	if o == nil || o.LinkState == nil {
		return nil, false
	}
	return o.LinkState, true
}



// HasLinkState returns a boolean if a field has been set.
func (o *WiFiDeviceStatus) HasLinkState() bool {
	if o != nil && o.LinkState != nil {
		return true
	}

	return false
}

// SetLinkState gets a reference to the given string and assigns it to the LinkState field.
func (o *WiFiDeviceStatus) SetLinkState(v string) {
	tmp := v
	o.LinkState = &tmp
}

// GetWifiDongleState returns the WifiDongleState field value if set, zero value otherwise.
func (o *WiFiDeviceStatus) GetWifiDongleState() string {
	if o == nil || o.WifiDongleState == nil {
		var ret string
		return ret
	}
	return *o.WifiDongleState
}

// GetWifiDongleStateOk returns a tuple with the WifiDongleState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WiFiDeviceStatus) GetWifiDongleStateOk() (*string, bool) {
	if o == nil || o.WifiDongleState == nil {
		return nil, false
	}
	return o.WifiDongleState, true
}



// HasWifiDongleState returns a boolean if a field has been set.
func (o *WiFiDeviceStatus) HasWifiDongleState() bool {
	if o != nil && o.WifiDongleState != nil {
		return true
	}

	return false
}

// SetWifiDongleState gets a reference to the given string and assigns it to the WifiDongleState field.
func (o *WiFiDeviceStatus) SetWifiDongleState(v string) {
	tmp := v
	o.WifiDongleState = &tmp
}

// GetAuthenticationState returns the AuthenticationState field value if set, zero value otherwise.
func (o *WiFiDeviceStatus) GetAuthenticationState() string {
	if o == nil || o.AuthenticationState == nil {
		var ret string
		return ret
	}
	return *o.AuthenticationState
}

// GetAuthenticationStateOk returns a tuple with the AuthenticationState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WiFiDeviceStatus) GetAuthenticationStateOk() (*string, bool) {
	if o == nil || o.AuthenticationState == nil {
		return nil, false
	}
	return o.AuthenticationState, true
}



// HasAuthenticationState returns a boolean if a field has been set.
func (o *WiFiDeviceStatus) HasAuthenticationState() bool {
	if o != nil && o.AuthenticationState != nil {
		return true
	}

	return false
}

// SetAuthenticationState gets a reference to the given string and assigns it to the AuthenticationState field.
func (o *WiFiDeviceStatus) SetAuthenticationState(v string) {
	tmp := v
	o.AuthenticationState = &tmp
}

func (o WiFiDeviceStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Mac != nil {
		toSerialize["mac"] = o.Mac
	}
	if o.Address != nil {
		toSerialize["address"] = o.Address
	}
	if o.Subnet != nil {
		toSerialize["subnet"] = o.Subnet
	}
	if o.Gateway != nil {
		toSerialize["gateway"] = o.Gateway
	}
	if o.Networks != nil {
		toSerialize["networks"] = o.Networks
	}
	if o.Connected != nil {
		toSerialize["connected"] = o.Connected
	}
	if o.DhcpState != nil {
		toSerialize["dhcpState"] = o.DhcpState
	}
	if o.InterfaceSetupState != nil {
		toSerialize["interfaceSetupState"] = o.InterfaceSetupState
	}
	if o.IpAddressOffered != nil {
		toSerialize["ipAddressOffered"] = o.IpAddressOffered
	}
	if o.LinkState != nil {
		toSerialize["linkState"] = o.LinkState
	}
	if o.WifiDongleState != nil {
		toSerialize["wifiDongleState"] = o.WifiDongleState
	}
	if o.AuthenticationState != nil {
		toSerialize["authenticationState"] = o.AuthenticationState
	}
	return json.Marshal(toSerialize)
}


func (o *WiFiDeviceStatus) ApplyMinMaxConstraints() bool {
	var valueChanged bool = false
	if o.HasName() {
		var fieldChanged = false
		var v string = o.GetName()
		if fieldChanged {
			o.SetName(v)
			valueChanged = true
		}
	}
	if o.HasMac() {
		var fieldChanged = false
		var v string = o.GetMac()
		if fieldChanged {
			o.SetMac(v)
			valueChanged = true
		}
	}
	if o.HasAddress() {
		var fieldChanged = false
		var v string = o.GetAddress()
		if fieldChanged {
			o.SetAddress(v)
			valueChanged = true
		}
	}
	if o.HasSubnet() {
		var fieldChanged = false
		var v string = o.GetSubnet()
		if fieldChanged {
			o.SetSubnet(v)
			valueChanged = true
		}
	}
	if o.HasGateway() {
		var fieldChanged = false
		var v string = o.GetGateway()
		if fieldChanged {
			o.SetGateway(v)
			valueChanged = true
		}
	}
	if o.HasIpAddressOffered() {
		var fieldChanged = false
		var v string = o.GetIpAddressOffered()
		if fieldChanged {
			o.SetIpAddressOffered(v)
			valueChanged = true
		}
	}
	if o.HasLinkState() {
		var fieldChanged = false
		var v string = o.GetLinkState()
		if fieldChanged {
			o.SetLinkState(v)
			valueChanged = true
		}
	}
	if o.HasWifiDongleState() {
		var fieldChanged = false
		var v string = o.GetWifiDongleState()
		if fieldChanged {
			o.SetWifiDongleState(v)
			valueChanged = true
		}
	}
	if o.HasAuthenticationState() {
		var fieldChanged = false
		var v string = o.GetAuthenticationState()
		if fieldChanged {
			o.SetAuthenticationState(v)
			valueChanged = true
		}
	}
	return valueChanged
}

type NullableWiFiDeviceStatus struct {
	value *WiFiDeviceStatus
	isSet bool
}

func (v NullableWiFiDeviceStatus) Get() *WiFiDeviceStatus {
	return v.value
}

func (v *NullableWiFiDeviceStatus) Set(val *WiFiDeviceStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableWiFiDeviceStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableWiFiDeviceStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWiFiDeviceStatus(val *WiFiDeviceStatus) *NullableWiFiDeviceStatus {
	return &NullableWiFiDeviceStatus{value: val, isSet: true}
}

func (v NullableWiFiDeviceStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWiFiDeviceStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


