/*
OpenAPI ColorBox

This is a REST API for the AJA ColorBox product.

The version of the OpenAPI document: 1.0.0
Contact: support@aja.com

NOTE: This code is auto generated by OpenAPI Generator (https://openapi-generator.tech).
      Do not edit this code manually.

Copyright (C) 2020-2022 AJA Video Systems Inc.  All rights reserved.
*/

package openapi

import (
	"encoding/json"
)

// ColorfrontConfig struct for ColorfrontConfig
type ColorfrontConfig struct {
	// true if stage is enabled else disabled (unity passthru)
	Enabled *bool `json:"enabled,omitempty"`
	InDynRangeGamut *ColorfrontDynRangeGamut `json:"inDynRangeGamut,omitempty"`
	OutDynRangeGamut *ColorfrontDynRangeGamut `json:"outDynRangeGamut,omitempty"`
	Mode *ColorfrontMode `json:"mode,omitempty"`
	TvMode *ColorfrontTvMode `json:"tvMode,omitempty"`
	LiveMode *ColorfrontLiveMode `json:"liveMode,omitempty"`
}

// NewColorfrontConfig instantiates a new ColorfrontConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewColorfrontConfig() *ColorfrontConfig {
	this := ColorfrontConfig{}
	var inDynRangeGamut ColorfrontDynRangeGamut = COLORFRONTDYNRANGEGAMUT_SDR_BT_709
	this.InDynRangeGamut = &inDynRangeGamut
	var outDynRangeGamut ColorfrontDynRangeGamut = COLORFRONTDYNRANGEGAMUT_SDR_BT_709
	this.OutDynRangeGamut = &outDynRangeGamut
	var mode ColorfrontMode = COLORFRONTMODE_TV
	this.Mode = &mode
	return &this
}

// NewColorfrontConfigWithDefaults instantiates a new ColorfrontConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewColorfrontConfigWithDefaults() *ColorfrontConfig {
	this := ColorfrontConfig{}
	var inDynRangeGamut ColorfrontDynRangeGamut = COLORFRONTDYNRANGEGAMUT_SDR_BT_709
	this.InDynRangeGamut = &inDynRangeGamut
	var outDynRangeGamut ColorfrontDynRangeGamut = COLORFRONTDYNRANGEGAMUT_SDR_BT_709
	this.OutDynRangeGamut = &outDynRangeGamut
	var mode ColorfrontMode = COLORFRONTMODE_TV
	this.Mode = &mode
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *ColorfrontConfig) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ColorfrontConfig) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}



// HasEnabled returns a boolean if a field has been set.
func (o *ColorfrontConfig) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *ColorfrontConfig) SetEnabled(v bool) {
	tmp := v
	o.Enabled = &tmp
}

// GetInDynRangeGamut returns the InDynRangeGamut field value if set, zero value otherwise.
func (o *ColorfrontConfig) GetInDynRangeGamut() ColorfrontDynRangeGamut {
	if o == nil || o.InDynRangeGamut == nil {
		var ret ColorfrontDynRangeGamut
		return ret
	}
	return *o.InDynRangeGamut
}

// GetInDynRangeGamutOk returns a tuple with the InDynRangeGamut field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ColorfrontConfig) GetInDynRangeGamutOk() (*ColorfrontDynRangeGamut, bool) {
	if o == nil || o.InDynRangeGamut == nil {
		return nil, false
	}
	return o.InDynRangeGamut, true
}



// HasInDynRangeGamut returns a boolean if a field has been set.
func (o *ColorfrontConfig) HasInDynRangeGamut() bool {
	if o != nil && o.InDynRangeGamut != nil {
		return true
	}

	return false
}

// SetInDynRangeGamut gets a reference to the given ColorfrontDynRangeGamut and assigns it to the InDynRangeGamut field.
func (o *ColorfrontConfig) SetInDynRangeGamut(v ColorfrontDynRangeGamut) {
	tmp := v
	o.InDynRangeGamut = &tmp
}

// GetOutDynRangeGamut returns the OutDynRangeGamut field value if set, zero value otherwise.
func (o *ColorfrontConfig) GetOutDynRangeGamut() ColorfrontDynRangeGamut {
	if o == nil || o.OutDynRangeGamut == nil {
		var ret ColorfrontDynRangeGamut
		return ret
	}
	return *o.OutDynRangeGamut
}

// GetOutDynRangeGamutOk returns a tuple with the OutDynRangeGamut field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ColorfrontConfig) GetOutDynRangeGamutOk() (*ColorfrontDynRangeGamut, bool) {
	if o == nil || o.OutDynRangeGamut == nil {
		return nil, false
	}
	return o.OutDynRangeGamut, true
}



// HasOutDynRangeGamut returns a boolean if a field has been set.
func (o *ColorfrontConfig) HasOutDynRangeGamut() bool {
	if o != nil && o.OutDynRangeGamut != nil {
		return true
	}

	return false
}

// SetOutDynRangeGamut gets a reference to the given ColorfrontDynRangeGamut and assigns it to the OutDynRangeGamut field.
func (o *ColorfrontConfig) SetOutDynRangeGamut(v ColorfrontDynRangeGamut) {
	tmp := v
	o.OutDynRangeGamut = &tmp
}

// GetMode returns the Mode field value if set, zero value otherwise.
func (o *ColorfrontConfig) GetMode() ColorfrontMode {
	if o == nil || o.Mode == nil {
		var ret ColorfrontMode
		return ret
	}
	return *o.Mode
}

// GetModeOk returns a tuple with the Mode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ColorfrontConfig) GetModeOk() (*ColorfrontMode, bool) {
	if o == nil || o.Mode == nil {
		return nil, false
	}
	return o.Mode, true
}



// HasMode returns a boolean if a field has been set.
func (o *ColorfrontConfig) HasMode() bool {
	if o != nil && o.Mode != nil {
		return true
	}

	return false
}

// SetMode gets a reference to the given ColorfrontMode and assigns it to the Mode field.
func (o *ColorfrontConfig) SetMode(v ColorfrontMode) {
	tmp := v
	o.Mode = &tmp
}

// GetTvMode returns the TvMode field value if set, zero value otherwise.
func (o *ColorfrontConfig) GetTvMode() ColorfrontTvMode {
	if o == nil || o.TvMode == nil {
		var ret ColorfrontTvMode
		return ret
	}
	return *o.TvMode
}

// GetTvModeOk returns a tuple with the TvMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ColorfrontConfig) GetTvModeOk() (*ColorfrontTvMode, bool) {
	if o == nil || o.TvMode == nil {
		return nil, false
	}
	return o.TvMode, true
}



// HasTvMode returns a boolean if a field has been set.
func (o *ColorfrontConfig) HasTvMode() bool {
	if o != nil && o.TvMode != nil {
		return true
	}

	return false
}

// SetTvMode gets a reference to the given ColorfrontTvMode and assigns it to the TvMode field.
func (o *ColorfrontConfig) SetTvMode(v ColorfrontTvMode) {
	tmp := v
	o.TvMode = &tmp
}

// GetLiveMode returns the LiveMode field value if set, zero value otherwise.
func (o *ColorfrontConfig) GetLiveMode() ColorfrontLiveMode {
	if o == nil || o.LiveMode == nil {
		var ret ColorfrontLiveMode
		return ret
	}
	return *o.LiveMode
}

// GetLiveModeOk returns a tuple with the LiveMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ColorfrontConfig) GetLiveModeOk() (*ColorfrontLiveMode, bool) {
	if o == nil || o.LiveMode == nil {
		return nil, false
	}
	return o.LiveMode, true
}



// HasLiveMode returns a boolean if a field has been set.
func (o *ColorfrontConfig) HasLiveMode() bool {
	if o != nil && o.LiveMode != nil {
		return true
	}

	return false
}

// SetLiveMode gets a reference to the given ColorfrontLiveMode and assigns it to the LiveMode field.
func (o *ColorfrontConfig) SetLiveMode(v ColorfrontLiveMode) {
	tmp := v
	o.LiveMode = &tmp
}

func (o ColorfrontConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	if o.InDynRangeGamut != nil {
		toSerialize["inDynRangeGamut"] = o.InDynRangeGamut
	}
	if o.OutDynRangeGamut != nil {
		toSerialize["outDynRangeGamut"] = o.OutDynRangeGamut
	}
	if o.Mode != nil {
		toSerialize["mode"] = o.Mode
	}
	if o.TvMode != nil {
		toSerialize["tvMode"] = o.TvMode
	}
	if o.LiveMode != nil {
		toSerialize["liveMode"] = o.LiveMode
	}
	return json.Marshal(toSerialize)
}


func (o *ColorfrontConfig) ApplyMinMaxConstraints() bool {
	var valueChanged bool = false
	return valueChanged
}

type NullableColorfrontConfig struct {
	value *ColorfrontConfig
	isSet bool
}

func (v NullableColorfrontConfig) Get() *ColorfrontConfig {
	return v.value
}

func (v *NullableColorfrontConfig) Set(val *ColorfrontConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableColorfrontConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableColorfrontConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableColorfrontConfig(val *ColorfrontConfig) *NullableColorfrontConfig {
	return &NullableColorfrontConfig{value: val, isSet: true}
}

func (v NullableColorfrontConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableColorfrontConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


