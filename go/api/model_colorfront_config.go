/*
OpenAPI Soji

This is a REST API for the AJA Soji product.

The version of the OpenAPI document: 1.0.0
Contact: support@aja.com

NOTE: This code is auto generated by OpenAPI Generator (https://openapi-generator.tech).
      Do not edit this code manually.

Copyright (C) 2020-2022 AJA Video Systems, Inc.  All rights reserved.
*/

package openapi

import (
	"encoding/json"
)

// ColorfrontConfig struct for ColorfrontConfig
type ColorfrontConfig struct {
	// true if stage is enabled else disabled (unity passthru)
	Enabled *bool `json:"enabled,omitempty"`
	InColorspace *ColorfrontColorspace `json:"inColorspace,omitempty"`
	OutColorspace *ColorfrontColorspace `json:"outColorspace,omitempty"`
}

// NewColorfrontConfig instantiates a new ColorfrontConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewColorfrontConfig() *ColorfrontConfig {
	this := ColorfrontConfig{}
	var inColorspace ColorfrontColorspace = COLORFRONTCOLORSPACE_BT709
	this.InColorspace = &inColorspace
	var outColorspace ColorfrontColorspace = COLORFRONTCOLORSPACE_BT709
	this.OutColorspace = &outColorspace
	return &this
}

// NewColorfrontConfigWithDefaults instantiates a new ColorfrontConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewColorfrontConfigWithDefaults() *ColorfrontConfig {
	this := ColorfrontConfig{}
	var inColorspace ColorfrontColorspace = COLORFRONTCOLORSPACE_BT709
	this.InColorspace = &inColorspace
	var outColorspace ColorfrontColorspace = COLORFRONTCOLORSPACE_BT709
	this.OutColorspace = &outColorspace
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *ColorfrontConfig) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ColorfrontConfig) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}



// HasEnabled returns a boolean if a field has been set.
func (o *ColorfrontConfig) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *ColorfrontConfig) SetEnabled(v bool) {
	tmp := v
	o.Enabled = &tmp
}

// GetInColorspace returns the InColorspace field value if set, zero value otherwise.
func (o *ColorfrontConfig) GetInColorspace() ColorfrontColorspace {
	if o == nil || o.InColorspace == nil {
		var ret ColorfrontColorspace
		return ret
	}
	return *o.InColorspace
}

// GetInColorspaceOk returns a tuple with the InColorspace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ColorfrontConfig) GetInColorspaceOk() (*ColorfrontColorspace, bool) {
	if o == nil || o.InColorspace == nil {
		return nil, false
	}
	return o.InColorspace, true
}



// HasInColorspace returns a boolean if a field has been set.
func (o *ColorfrontConfig) HasInColorspace() bool {
	if o != nil && o.InColorspace != nil {
		return true
	}

	return false
}

// SetInColorspace gets a reference to the given ColorfrontColorspace and assigns it to the InColorspace field.
func (o *ColorfrontConfig) SetInColorspace(v ColorfrontColorspace) {
	tmp := v
	o.InColorspace = &tmp
}

// GetOutColorspace returns the OutColorspace field value if set, zero value otherwise.
func (o *ColorfrontConfig) GetOutColorspace() ColorfrontColorspace {
	if o == nil || o.OutColorspace == nil {
		var ret ColorfrontColorspace
		return ret
	}
	return *o.OutColorspace
}

// GetOutColorspaceOk returns a tuple with the OutColorspace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ColorfrontConfig) GetOutColorspaceOk() (*ColorfrontColorspace, bool) {
	if o == nil || o.OutColorspace == nil {
		return nil, false
	}
	return o.OutColorspace, true
}



// HasOutColorspace returns a boolean if a field has been set.
func (o *ColorfrontConfig) HasOutColorspace() bool {
	if o != nil && o.OutColorspace != nil {
		return true
	}

	return false
}

// SetOutColorspace gets a reference to the given ColorfrontColorspace and assigns it to the OutColorspace field.
func (o *ColorfrontConfig) SetOutColorspace(v ColorfrontColorspace) {
	tmp := v
	o.OutColorspace = &tmp
}

func (o ColorfrontConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	if o.InColorspace != nil {
		toSerialize["inColorspace"] = o.InColorspace
	}
	if o.OutColorspace != nil {
		toSerialize["outColorspace"] = o.OutColorspace
	}
	return json.Marshal(toSerialize)
}


func (o *ColorfrontConfig) ApplyMinMaxConstraints() bool {
	var valueChanged bool = false
	return valueChanged
}

type NullableColorfrontConfig struct {
	value *ColorfrontConfig
	isSet bool
}

func (v NullableColorfrontConfig) Get() *ColorfrontConfig {
	return v.value
}

func (v *NullableColorfrontConfig) Set(val *ColorfrontConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableColorfrontConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableColorfrontConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableColorfrontConfig(val *ColorfrontConfig) *NullableColorfrontConfig {
	return &NullableColorfrontConfig{value: val, isSet: true}
}

func (v NullableColorfrontConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableColorfrontConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


