/*
OpenAPI Soji

This is a REST API for the AJA Soji product.

The version of the OpenAPI document: 1.0.0
Contact: support@aja.com

NOTE: This code is auto generated by OpenAPI Generator (https://openapi-generator.tech).
      Do not edit this code manually.

Copyright (C) 2020-2022 AJA Video Systems, Inc.  All rights reserved.
*/

package openapi

import (
	"encoding/json"
)

// WiFiDeviceConfig struct for WiFiDeviceConfig
type WiFiDeviceConfig struct {
	WifiControl *string `json:"wifiControl,omitempty"`
	WifiNetwork *string `json:"wifiNetwork,omitempty"`
	WifiPassword *string `json:"wifiPassword,omitempty"`
	WifiSecurity *string `json:"wifiSecurity,omitempty"`
	WifiIpConfig *string `json:"wifiIpConfig,omitempty"`
	Address *string `json:"address,omitempty"`
	Subnet *string `json:"subnet,omitempty"`
	Gateway *string `json:"gateway,omitempty"`
	WifiIpChangeCommit *int32 `json:"wifiIpChangeCommit,omitempty"`
}

// NewWiFiDeviceConfig instantiates a new WiFiDeviceConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWiFiDeviceConfig() *WiFiDeviceConfig {
	this := WiFiDeviceConfig{}
	var wifiControl string = "Off"
	this.WifiControl = &wifiControl
	var wifiSecurity string = "None"
	this.WifiSecurity = &wifiSecurity
	var wifiIpConfig string = "DHCP"
	this.WifiIpConfig = &wifiIpConfig
	var wifiIpChangeCommit int32 = 0
	this.WifiIpChangeCommit = &wifiIpChangeCommit
	return &this
}

// NewWiFiDeviceConfigWithDefaults instantiates a new WiFiDeviceConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWiFiDeviceConfigWithDefaults() *WiFiDeviceConfig {
	this := WiFiDeviceConfig{}
	var wifiControl string = "Off"
	this.WifiControl = &wifiControl
	var wifiSecurity string = "None"
	this.WifiSecurity = &wifiSecurity
	var wifiIpConfig string = "DHCP"
	this.WifiIpConfig = &wifiIpConfig
	var wifiIpChangeCommit int32 = 0
	this.WifiIpChangeCommit = &wifiIpChangeCommit
	return &this
}

// GetWifiControl returns the WifiControl field value if set, zero value otherwise.
func (o *WiFiDeviceConfig) GetWifiControl() string {
	if o == nil || o.WifiControl == nil {
		var ret string
		return ret
	}
	return *o.WifiControl
}

// GetWifiControlOk returns a tuple with the WifiControl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WiFiDeviceConfig) GetWifiControlOk() (*string, bool) {
	if o == nil || o.WifiControl == nil {
		return nil, false
	}
	return o.WifiControl, true
}



// HasWifiControl returns a boolean if a field has been set.
func (o *WiFiDeviceConfig) HasWifiControl() bool {
	if o != nil && o.WifiControl != nil {
		return true
	}

	return false
}

// SetWifiControl gets a reference to the given string and assigns it to the WifiControl field.
func (o *WiFiDeviceConfig) SetWifiControl(v string) {
	tmp := v
	o.WifiControl = &tmp
}

// GetWifiNetwork returns the WifiNetwork field value if set, zero value otherwise.
func (o *WiFiDeviceConfig) GetWifiNetwork() string {
	if o == nil || o.WifiNetwork == nil {
		var ret string
		return ret
	}
	return *o.WifiNetwork
}

// GetWifiNetworkOk returns a tuple with the WifiNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WiFiDeviceConfig) GetWifiNetworkOk() (*string, bool) {
	if o == nil || o.WifiNetwork == nil {
		return nil, false
	}
	return o.WifiNetwork, true
}



// HasWifiNetwork returns a boolean if a field has been set.
func (o *WiFiDeviceConfig) HasWifiNetwork() bool {
	if o != nil && o.WifiNetwork != nil {
		return true
	}

	return false
}

// SetWifiNetwork gets a reference to the given string and assigns it to the WifiNetwork field.
func (o *WiFiDeviceConfig) SetWifiNetwork(v string) {
	tmp := v
	o.WifiNetwork = &tmp
}

// GetWifiPassword returns the WifiPassword field value if set, zero value otherwise.
func (o *WiFiDeviceConfig) GetWifiPassword() string {
	if o == nil || o.WifiPassword == nil {
		var ret string
		return ret
	}
	return *o.WifiPassword
}

// GetWifiPasswordOk returns a tuple with the WifiPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WiFiDeviceConfig) GetWifiPasswordOk() (*string, bool) {
	if o == nil || o.WifiPassword == nil {
		return nil, false
	}
	return o.WifiPassword, true
}



// HasWifiPassword returns a boolean if a field has been set.
func (o *WiFiDeviceConfig) HasWifiPassword() bool {
	if o != nil && o.WifiPassword != nil {
		return true
	}

	return false
}

// SetWifiPassword gets a reference to the given string and assigns it to the WifiPassword field.
func (o *WiFiDeviceConfig) SetWifiPassword(v string) {
	tmp := v
	o.WifiPassword = &tmp
}

// GetWifiSecurity returns the WifiSecurity field value if set, zero value otherwise.
func (o *WiFiDeviceConfig) GetWifiSecurity() string {
	if o == nil || o.WifiSecurity == nil {
		var ret string
		return ret
	}
	return *o.WifiSecurity
}

// GetWifiSecurityOk returns a tuple with the WifiSecurity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WiFiDeviceConfig) GetWifiSecurityOk() (*string, bool) {
	if o == nil || o.WifiSecurity == nil {
		return nil, false
	}
	return o.WifiSecurity, true
}



// HasWifiSecurity returns a boolean if a field has been set.
func (o *WiFiDeviceConfig) HasWifiSecurity() bool {
	if o != nil && o.WifiSecurity != nil {
		return true
	}

	return false
}

// SetWifiSecurity gets a reference to the given string and assigns it to the WifiSecurity field.
func (o *WiFiDeviceConfig) SetWifiSecurity(v string) {
	tmp := v
	o.WifiSecurity = &tmp
}

// GetWifiIpConfig returns the WifiIpConfig field value if set, zero value otherwise.
func (o *WiFiDeviceConfig) GetWifiIpConfig() string {
	if o == nil || o.WifiIpConfig == nil {
		var ret string
		return ret
	}
	return *o.WifiIpConfig
}

// GetWifiIpConfigOk returns a tuple with the WifiIpConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WiFiDeviceConfig) GetWifiIpConfigOk() (*string, bool) {
	if o == nil || o.WifiIpConfig == nil {
		return nil, false
	}
	return o.WifiIpConfig, true
}



// HasWifiIpConfig returns a boolean if a field has been set.
func (o *WiFiDeviceConfig) HasWifiIpConfig() bool {
	if o != nil && o.WifiIpConfig != nil {
		return true
	}

	return false
}

// SetWifiIpConfig gets a reference to the given string and assigns it to the WifiIpConfig field.
func (o *WiFiDeviceConfig) SetWifiIpConfig(v string) {
	tmp := v
	o.WifiIpConfig = &tmp
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *WiFiDeviceConfig) GetAddress() string {
	if o == nil || o.Address == nil {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WiFiDeviceConfig) GetAddressOk() (*string, bool) {
	if o == nil || o.Address == nil {
		return nil, false
	}
	return o.Address, true
}



// HasAddress returns a boolean if a field has been set.
func (o *WiFiDeviceConfig) HasAddress() bool {
	if o != nil && o.Address != nil {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *WiFiDeviceConfig) SetAddress(v string) {
	tmp := v
	o.Address = &tmp
}

// GetSubnet returns the Subnet field value if set, zero value otherwise.
func (o *WiFiDeviceConfig) GetSubnet() string {
	if o == nil || o.Subnet == nil {
		var ret string
		return ret
	}
	return *o.Subnet
}

// GetSubnetOk returns a tuple with the Subnet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WiFiDeviceConfig) GetSubnetOk() (*string, bool) {
	if o == nil || o.Subnet == nil {
		return nil, false
	}
	return o.Subnet, true
}



// HasSubnet returns a boolean if a field has been set.
func (o *WiFiDeviceConfig) HasSubnet() bool {
	if o != nil && o.Subnet != nil {
		return true
	}

	return false
}

// SetSubnet gets a reference to the given string and assigns it to the Subnet field.
func (o *WiFiDeviceConfig) SetSubnet(v string) {
	tmp := v
	o.Subnet = &tmp
}

// GetGateway returns the Gateway field value if set, zero value otherwise.
func (o *WiFiDeviceConfig) GetGateway() string {
	if o == nil || o.Gateway == nil {
		var ret string
		return ret
	}
	return *o.Gateway
}

// GetGatewayOk returns a tuple with the Gateway field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WiFiDeviceConfig) GetGatewayOk() (*string, bool) {
	if o == nil || o.Gateway == nil {
		return nil, false
	}
	return o.Gateway, true
}



// HasGateway returns a boolean if a field has been set.
func (o *WiFiDeviceConfig) HasGateway() bool {
	if o != nil && o.Gateway != nil {
		return true
	}

	return false
}

// SetGateway gets a reference to the given string and assigns it to the Gateway field.
func (o *WiFiDeviceConfig) SetGateway(v string) {
	tmp := v
	o.Gateway = &tmp
}

// GetWifiIpChangeCommit returns the WifiIpChangeCommit field value if set, zero value otherwise.
func (o *WiFiDeviceConfig) GetWifiIpChangeCommit() int32 {
	if o == nil || o.WifiIpChangeCommit == nil {
		var ret int32
		return ret
	}
	return *o.WifiIpChangeCommit
}

// GetWifiIpChangeCommitOk returns a tuple with the WifiIpChangeCommit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WiFiDeviceConfig) GetWifiIpChangeCommitOk() (*int32, bool) {
	if o == nil || o.WifiIpChangeCommit == nil {
		return nil, false
	}
	return o.WifiIpChangeCommit, true
}



// HasWifiIpChangeCommit returns a boolean if a field has been set.
func (o *WiFiDeviceConfig) HasWifiIpChangeCommit() bool {
	if o != nil && o.WifiIpChangeCommit != nil {
		return true
	}

	return false
}

// SetWifiIpChangeCommit gets a reference to the given int32 and assigns it to the WifiIpChangeCommit field.
func (o *WiFiDeviceConfig) SetWifiIpChangeCommit(v int32) {
	tmp := v
	o.WifiIpChangeCommit = &tmp
}

func (o WiFiDeviceConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.WifiControl != nil {
		toSerialize["wifiControl"] = o.WifiControl
	}
	if o.WifiNetwork != nil {
		toSerialize["wifiNetwork"] = o.WifiNetwork
	}
	if o.WifiPassword != nil {
		toSerialize["wifiPassword"] = o.WifiPassword
	}
	if o.WifiSecurity != nil {
		toSerialize["wifiSecurity"] = o.WifiSecurity
	}
	if o.WifiIpConfig != nil {
		toSerialize["wifiIpConfig"] = o.WifiIpConfig
	}
	if o.Address != nil {
		toSerialize["address"] = o.Address
	}
	if o.Subnet != nil {
		toSerialize["subnet"] = o.Subnet
	}
	if o.Gateway != nil {
		toSerialize["gateway"] = o.Gateway
	}
	if o.WifiIpChangeCommit != nil {
		toSerialize["wifiIpChangeCommit"] = o.WifiIpChangeCommit
	}
	return json.Marshal(toSerialize)
}


func (o *WiFiDeviceConfig) ApplyMinMaxConstraints() bool {
	var valueChanged bool = false
	if o.HasWifiControl() {
		var fieldChanged = false
		var v string = o.GetWifiControl()
		if fieldChanged {
			o.SetWifiControl(v)
			valueChanged = true
		}
	}
	if o.HasWifiNetwork() {
		var fieldChanged = false
		var v string = o.GetWifiNetwork()
		if fieldChanged {
			o.SetWifiNetwork(v)
			valueChanged = true
		}
	}
	if o.HasWifiPassword() {
		var fieldChanged = false
		var v string = o.GetWifiPassword()
		if fieldChanged {
			o.SetWifiPassword(v)
			valueChanged = true
		}
	}
	if o.HasWifiSecurity() {
		var fieldChanged = false
		var v string = o.GetWifiSecurity()
		if fieldChanged {
			o.SetWifiSecurity(v)
			valueChanged = true
		}
	}
	if o.HasWifiIpConfig() {
		var fieldChanged = false
		var v string = o.GetWifiIpConfig()
		if fieldChanged {
			o.SetWifiIpConfig(v)
			valueChanged = true
		}
	}
	if o.HasAddress() {
		var fieldChanged = false
		var v string = o.GetAddress()
		if fieldChanged {
			o.SetAddress(v)
			valueChanged = true
		}
	}
	if o.HasSubnet() {
		var fieldChanged = false
		var v string = o.GetSubnet()
		if fieldChanged {
			o.SetSubnet(v)
			valueChanged = true
		}
	}
	if o.HasGateway() {
		var fieldChanged = false
		var v string = o.GetGateway()
		if fieldChanged {
			o.SetGateway(v)
			valueChanged = true
		}
	}
	if o.HasWifiIpChangeCommit() {
		var fieldChanged = false
		var v int32 = o.GetWifiIpChangeCommit()
		if fieldChanged {
			o.SetWifiIpChangeCommit(v)
			valueChanged = true
		}
	}
	return valueChanged
}

type NullableWiFiDeviceConfig struct {
	value *WiFiDeviceConfig
	isSet bool
}

func (v NullableWiFiDeviceConfig) Get() *WiFiDeviceConfig {
	return v.value
}

func (v *NullableWiFiDeviceConfig) Set(val *WiFiDeviceConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableWiFiDeviceConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableWiFiDeviceConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWiFiDeviceConfig(val *WiFiDeviceConfig) *NullableWiFiDeviceConfig {
	return &NullableWiFiDeviceConfig{value: val, isSet: true}
}

func (v NullableWiFiDeviceConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWiFiDeviceConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


