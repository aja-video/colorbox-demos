/*
OpenAPI ColorBox

This is a REST API for the AJA ColorBox product.

The version of the OpenAPI document: 1.0.0
Contact: support@aja.com

NOTE: This code is auto generated by OpenAPI Generator (https://openapi-generator.tech).
      Do not edit this code manually.

Copyright (C) 2020-2022 AJA Video Systems Inc.  All rights reserved.
*/

package openapi

import (
	"encoding/json"
)

// NetStatus struct for NetStatus
type NetStatus struct {
	Name *string `json:"name,omitempty"`
	Mac *string `json:"mac,omitempty"`
	Connected *bool `json:"connected,omitempty"`
	DhcpState *DHCPState `json:"dhcpState,omitempty"`
	InterfaceSetupState *InterfaceSetupState `json:"interfaceSetupState,omitempty"`
	IpAddressOffered *string `json:"ipAddressOffered,omitempty"`
	LinkErrors *int32 `json:"linkErrors,omitempty"`
	LinkState *string `json:"linkState,omitempty"`
	LldpChassisId *string `json:"lldpChassisId,omitempty"`
	LldpPortId *string `json:"lldpPortId,omitempty"`
	LldpName *string `json:"lldpName,omitempty"`
}

// NewNetStatus instantiates a new NetStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetStatus() *NetStatus {
	this := NetStatus{}
	var connected bool = false
	this.Connected = &connected
	var dhcpState DHCPState = DHCPSTATE_DISABLED
	this.DhcpState = &dhcpState
	var interfaceSetupState InterfaceSetupState = INTERFACESETUPSTATE_UNINITIALIZED
	this.InterfaceSetupState = &interfaceSetupState
	var linkErrors int32 = 0
	this.LinkErrors = &linkErrors
	return &this
}

// NewNetStatusWithDefaults instantiates a new NetStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetStatusWithDefaults() *NetStatus {
	this := NetStatus{}
	var connected bool = false
	this.Connected = &connected
	var dhcpState DHCPState = DHCPSTATE_DISABLED
	this.DhcpState = &dhcpState
	var interfaceSetupState InterfaceSetupState = INTERFACESETUPSTATE_UNINITIALIZED
	this.InterfaceSetupState = &interfaceSetupState
	var linkErrors int32 = 0
	this.LinkErrors = &linkErrors
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *NetStatus) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetStatus) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}



// HasName returns a boolean if a field has been set.
func (o *NetStatus) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *NetStatus) SetName(v string) {
	tmp := v
	o.Name = &tmp
}

// GetMac returns the Mac field value if set, zero value otherwise.
func (o *NetStatus) GetMac() string {
	if o == nil || o.Mac == nil {
		var ret string
		return ret
	}
	return *o.Mac
}

// GetMacOk returns a tuple with the Mac field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetStatus) GetMacOk() (*string, bool) {
	if o == nil || o.Mac == nil {
		return nil, false
	}
	return o.Mac, true
}



// HasMac returns a boolean if a field has been set.
func (o *NetStatus) HasMac() bool {
	if o != nil && o.Mac != nil {
		return true
	}

	return false
}

// SetMac gets a reference to the given string and assigns it to the Mac field.
func (o *NetStatus) SetMac(v string) {
	tmp := v
	o.Mac = &tmp
}

// GetConnected returns the Connected field value if set, zero value otherwise.
func (o *NetStatus) GetConnected() bool {
	if o == nil || o.Connected == nil {
		var ret bool
		return ret
	}
	return *o.Connected
}

// GetConnectedOk returns a tuple with the Connected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetStatus) GetConnectedOk() (*bool, bool) {
	if o == nil || o.Connected == nil {
		return nil, false
	}
	return o.Connected, true
}



// HasConnected returns a boolean if a field has been set.
func (o *NetStatus) HasConnected() bool {
	if o != nil && o.Connected != nil {
		return true
	}

	return false
}

// SetConnected gets a reference to the given bool and assigns it to the Connected field.
func (o *NetStatus) SetConnected(v bool) {
	tmp := v
	o.Connected = &tmp
}

// GetDhcpState returns the DhcpState field value if set, zero value otherwise.
func (o *NetStatus) GetDhcpState() DHCPState {
	if o == nil || o.DhcpState == nil {
		var ret DHCPState
		return ret
	}
	return *o.DhcpState
}

// GetDhcpStateOk returns a tuple with the DhcpState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetStatus) GetDhcpStateOk() (*DHCPState, bool) {
	if o == nil || o.DhcpState == nil {
		return nil, false
	}
	return o.DhcpState, true
}



// HasDhcpState returns a boolean if a field has been set.
func (o *NetStatus) HasDhcpState() bool {
	if o != nil && o.DhcpState != nil {
		return true
	}

	return false
}

// SetDhcpState gets a reference to the given DHCPState and assigns it to the DhcpState field.
func (o *NetStatus) SetDhcpState(v DHCPState) {
	tmp := v
	o.DhcpState = &tmp
}

// GetInterfaceSetupState returns the InterfaceSetupState field value if set, zero value otherwise.
func (o *NetStatus) GetInterfaceSetupState() InterfaceSetupState {
	if o == nil || o.InterfaceSetupState == nil {
		var ret InterfaceSetupState
		return ret
	}
	return *o.InterfaceSetupState
}

// GetInterfaceSetupStateOk returns a tuple with the InterfaceSetupState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetStatus) GetInterfaceSetupStateOk() (*InterfaceSetupState, bool) {
	if o == nil || o.InterfaceSetupState == nil {
		return nil, false
	}
	return o.InterfaceSetupState, true
}



// HasInterfaceSetupState returns a boolean if a field has been set.
func (o *NetStatus) HasInterfaceSetupState() bool {
	if o != nil && o.InterfaceSetupState != nil {
		return true
	}

	return false
}

// SetInterfaceSetupState gets a reference to the given InterfaceSetupState and assigns it to the InterfaceSetupState field.
func (o *NetStatus) SetInterfaceSetupState(v InterfaceSetupState) {
	tmp := v
	o.InterfaceSetupState = &tmp
}

// GetIpAddressOffered returns the IpAddressOffered field value if set, zero value otherwise.
func (o *NetStatus) GetIpAddressOffered() string {
	if o == nil || o.IpAddressOffered == nil {
		var ret string
		return ret
	}
	return *o.IpAddressOffered
}

// GetIpAddressOfferedOk returns a tuple with the IpAddressOffered field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetStatus) GetIpAddressOfferedOk() (*string, bool) {
	if o == nil || o.IpAddressOffered == nil {
		return nil, false
	}
	return o.IpAddressOffered, true
}



// HasIpAddressOffered returns a boolean if a field has been set.
func (o *NetStatus) HasIpAddressOffered() bool {
	if o != nil && o.IpAddressOffered != nil {
		return true
	}

	return false
}

// SetIpAddressOffered gets a reference to the given string and assigns it to the IpAddressOffered field.
func (o *NetStatus) SetIpAddressOffered(v string) {
	tmp := v
	o.IpAddressOffered = &tmp
}

// GetLinkErrors returns the LinkErrors field value if set, zero value otherwise.
func (o *NetStatus) GetLinkErrors() int32 {
	if o == nil || o.LinkErrors == nil {
		var ret int32
		return ret
	}
	return *o.LinkErrors
}

// GetLinkErrorsOk returns a tuple with the LinkErrors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetStatus) GetLinkErrorsOk() (*int32, bool) {
	if o == nil || o.LinkErrors == nil {
		return nil, false
	}
	return o.LinkErrors, true
}



// HasLinkErrors returns a boolean if a field has been set.
func (o *NetStatus) HasLinkErrors() bool {
	if o != nil && o.LinkErrors != nil {
		return true
	}

	return false
}

// SetLinkErrors gets a reference to the given int32 and assigns it to the LinkErrors field.
func (o *NetStatus) SetLinkErrors(v int32) {
	tmp := v
	o.LinkErrors = &tmp
}

// GetLinkState returns the LinkState field value if set, zero value otherwise.
func (o *NetStatus) GetLinkState() string {
	if o == nil || o.LinkState == nil {
		var ret string
		return ret
	}
	return *o.LinkState
}

// GetLinkStateOk returns a tuple with the LinkState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetStatus) GetLinkStateOk() (*string, bool) {
	if o == nil || o.LinkState == nil {
		return nil, false
	}
	return o.LinkState, true
}



// HasLinkState returns a boolean if a field has been set.
func (o *NetStatus) HasLinkState() bool {
	if o != nil && o.LinkState != nil {
		return true
	}

	return false
}

// SetLinkState gets a reference to the given string and assigns it to the LinkState field.
func (o *NetStatus) SetLinkState(v string) {
	tmp := v
	o.LinkState = &tmp
}

// GetLldpChassisId returns the LldpChassisId field value if set, zero value otherwise.
func (o *NetStatus) GetLldpChassisId() string {
	if o == nil || o.LldpChassisId == nil {
		var ret string
		return ret
	}
	return *o.LldpChassisId
}

// GetLldpChassisIdOk returns a tuple with the LldpChassisId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetStatus) GetLldpChassisIdOk() (*string, bool) {
	if o == nil || o.LldpChassisId == nil {
		return nil, false
	}
	return o.LldpChassisId, true
}



// HasLldpChassisId returns a boolean if a field has been set.
func (o *NetStatus) HasLldpChassisId() bool {
	if o != nil && o.LldpChassisId != nil {
		return true
	}

	return false
}

// SetLldpChassisId gets a reference to the given string and assigns it to the LldpChassisId field.
func (o *NetStatus) SetLldpChassisId(v string) {
	tmp := v
	o.LldpChassisId = &tmp
}

// GetLldpPortId returns the LldpPortId field value if set, zero value otherwise.
func (o *NetStatus) GetLldpPortId() string {
	if o == nil || o.LldpPortId == nil {
		var ret string
		return ret
	}
	return *o.LldpPortId
}

// GetLldpPortIdOk returns a tuple with the LldpPortId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetStatus) GetLldpPortIdOk() (*string, bool) {
	if o == nil || o.LldpPortId == nil {
		return nil, false
	}
	return o.LldpPortId, true
}



// HasLldpPortId returns a boolean if a field has been set.
func (o *NetStatus) HasLldpPortId() bool {
	if o != nil && o.LldpPortId != nil {
		return true
	}

	return false
}

// SetLldpPortId gets a reference to the given string and assigns it to the LldpPortId field.
func (o *NetStatus) SetLldpPortId(v string) {
	tmp := v
	o.LldpPortId = &tmp
}

// GetLldpName returns the LldpName field value if set, zero value otherwise.
func (o *NetStatus) GetLldpName() string {
	if o == nil || o.LldpName == nil {
		var ret string
		return ret
	}
	return *o.LldpName
}

// GetLldpNameOk returns a tuple with the LldpName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetStatus) GetLldpNameOk() (*string, bool) {
	if o == nil || o.LldpName == nil {
		return nil, false
	}
	return o.LldpName, true
}



// HasLldpName returns a boolean if a field has been set.
func (o *NetStatus) HasLldpName() bool {
	if o != nil && o.LldpName != nil {
		return true
	}

	return false
}

// SetLldpName gets a reference to the given string and assigns it to the LldpName field.
func (o *NetStatus) SetLldpName(v string) {
	tmp := v
	o.LldpName = &tmp
}

func (o NetStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Mac != nil {
		toSerialize["mac"] = o.Mac
	}
	if o.Connected != nil {
		toSerialize["connected"] = o.Connected
	}
	if o.DhcpState != nil {
		toSerialize["dhcpState"] = o.DhcpState
	}
	if o.InterfaceSetupState != nil {
		toSerialize["interfaceSetupState"] = o.InterfaceSetupState
	}
	if o.IpAddressOffered != nil {
		toSerialize["ipAddressOffered"] = o.IpAddressOffered
	}
	if o.LinkErrors != nil {
		toSerialize["linkErrors"] = o.LinkErrors
	}
	if o.LinkState != nil {
		toSerialize["linkState"] = o.LinkState
	}
	if o.LldpChassisId != nil {
		toSerialize["lldpChassisId"] = o.LldpChassisId
	}
	if o.LldpPortId != nil {
		toSerialize["lldpPortId"] = o.LldpPortId
	}
	if o.LldpName != nil {
		toSerialize["lldpName"] = o.LldpName
	}
	return json.Marshal(toSerialize)
}


func (o *NetStatus) ApplyMinMaxConstraints() bool {
	var valueChanged bool = false
	if o.HasName() {
		var fieldChanged = false
		var v string = o.GetName()
		if fieldChanged {
			o.SetName(v)
			valueChanged = true
		}
	}
	if o.HasMac() {
		var fieldChanged = false
		var v string = o.GetMac()
		if fieldChanged {
			o.SetMac(v)
			valueChanged = true
		}
	}
	if o.HasIpAddressOffered() {
		var fieldChanged = false
		var v string = o.GetIpAddressOffered()
		if fieldChanged {
			o.SetIpAddressOffered(v)
			valueChanged = true
		}
	}
	if o.HasLinkErrors() {
		var fieldChanged = false
		var v int32 = o.GetLinkErrors()
		if fieldChanged {
			o.SetLinkErrors(v)
			valueChanged = true
		}
	}
	if o.HasLinkState() {
		var fieldChanged = false
		var v string = o.GetLinkState()
		if fieldChanged {
			o.SetLinkState(v)
			valueChanged = true
		}
	}
	if o.HasLldpChassisId() {
		var fieldChanged = false
		var v string = o.GetLldpChassisId()
		if fieldChanged {
			o.SetLldpChassisId(v)
			valueChanged = true
		}
	}
	if o.HasLldpPortId() {
		var fieldChanged = false
		var v string = o.GetLldpPortId()
		if fieldChanged {
			o.SetLldpPortId(v)
			valueChanged = true
		}
	}
	if o.HasLldpName() {
		var fieldChanged = false
		var v string = o.GetLldpName()
		if fieldChanged {
			o.SetLldpName(v)
			valueChanged = true
		}
	}
	return valueChanged
}

type NullableNetStatus struct {
	value *NetStatus
	isSet bool
}

func (v NullableNetStatus) Get() *NetStatus {
	return v.value
}

func (v *NullableNetStatus) Set(val *NetStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableNetStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableNetStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetStatus(val *NetStatus) *NullableNetStatus {
	return &NullableNetStatus{value: val, isSet: true}
}

func (v NullableNetStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


